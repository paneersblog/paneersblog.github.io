<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Python入门笔记（四）</title>
    <link href="/3156.html"/>
    <url>/3156.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>人生苦短 我用Python</p><span id="more"></span><hr><h2 id="数据类型之间的转换"><a href="#数据类型之间的转换" class="headerlink" title="数据类型之间的转换"></a>数据类型之间的转换</h2><h3 id="隐式类型转换"><a href="#隐式类型转换" class="headerlink" title="隐式类型转换"></a>隐式类型转换</h3><p>通过数学运算可以隐式将 int类型 转换成 float类型。</p><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 12.数据类型隐式转换</span><br>x = <span class="hljs-number">10</span><br>y = <span class="hljs-number">3</span><br>z = x/y<br><span class="hljs-built_in">print</span>(z,<span class="hljs-built_in">type</span>(z),<span class="hljs-built_in">type</span>(x))  <span class="hljs-comment"># 则此时的&quot;z&quot;即为 float类型</span><br></code></pre></td></tr></table></figure><h3 id="显式类型转换"><a href="#显式类型转换" class="headerlink" title="显式类型转换"></a>显式类型转换</h3><table><thead><tr><th align="left">函数</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">int(x)</td><td align="left">将x转换为整数类型</td></tr><tr><td align="left">float(x)</td><td align="left">将x转换为浮点数类型</td></tr><tr><td align="left">str(x)</td><td align="left">将x转换为字符串</td></tr><tr><td align="left">chr(x)</td><td align="left">将整数x转换为一个字符</td></tr><tr><td align="left">ord(x)</td><td align="left">将一个字符x转换为其对应的整数值</td></tr><tr><td align="left">hex(x)</td><td align="left">将一个整数x转换为一个十六进制字符串</td></tr><tr><td align="left">oct(x)</td><td align="left">将一个整数x转换为一个八进制字符串</td></tr><tr><td align="left">bin(x)</td><td align="left">将一个整数x转换为一个二进制字符串</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 13.数据类型显式转换</span><br><span class="hljs-comment"># float TO int 只保留整数部分</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">int</span>(<span class="hljs-number">3.14</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">int</span>(<span class="hljs-number">3.9</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">int</span>(-<span class="hljs-number">3.14</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">int</span>(-<span class="hljs-number">3.9</span>))<br><span class="hljs-comment"># int TO float 在整数后加&quot; .0&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">float</span>(<span class="hljs-number">10</span>))<br><span class="hljs-comment"># str TO int</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;100&#x27;</span>)+<span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;200&#x27;</span>))  <span class="hljs-comment"># 注意，此时100与200均加了单引号，为字符串类型</span><br><span class="hljs-comment"># str TO float</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">float</span>(<span class="hljs-string">&#x27;3.14&#x27;</span>))<br><span class="hljs-comment"># 注意，若字符串类型如&quot;10a&quot;这样，当其转换为int或float类型时会产生&quot;ValueError&quot;</span><br><span class="hljs-comment"># 注意，类似int(&#x27;3.14&#x27;)这样的语句，因为字符串&quot;3.14&quot;不是整数，也会产生&quot;ValueError&quot;</span><br><br><span class="hljs-comment"># chr &amp; ord</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;圆&#x27;</span>))  <span class="hljs-comment"># 22278  将&quot;圆&quot;转换成对应的数值</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-number">22278</span>))  <span class="hljs-comment"># 将数值转换成对应的字符</span><br><br><span class="hljs-comment"># 进制之间的转换 十进制 TO Other</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">hex</span>(<span class="hljs-number">22278</span>))  <span class="hljs-comment"># 0x5706</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">oct</span>(<span class="hljs-number">22278</span>))  <span class="hljs-comment"># 0o53406</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bin</span>(<span class="hljs-number">22278</span>))  <span class="hljs-comment"># 0b101011100000110</span><br></code></pre></td></tr></table></figure><h2 id="eval-函数"><a href="#eval-函数" class="headerlink" title="eval()函数"></a><code>eval()</code>函数</h2><p><code>eval(s)</code>函数将去掉字符串s最外侧的引号，并按照Python语句方式执行去掉引号后的字符串<br>其语法格式为：</p><div class="code-wrapper"><pre><code class="hljs">变量=eval(字符串)</code></pre></div><p><code>eval()</code>函数经常和<code>input()</code>函数一起使用，来获取用户输入的数值型  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># eval()函数</span><br>s = <span class="hljs-string">&#x27;3.14+2&#x27;</span><br><span class="hljs-built_in">print</span>(s,<span class="hljs-built_in">type</span>(s))  <span class="hljs-comment"># 3.14+2 &lt;class &#x27;str&#x27;&gt;</span><br>x = <span class="hljs-built_in">eval</span>(s)<br><span class="hljs-built_in">print</span>(x,<span class="hljs-built_in">type</span>(x))  <span class="hljs-comment"># 5.140000000000001 &lt;class &#x27;float&#x27;&gt;</span><br><br>age = <span class="hljs-built_in">eval</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入您的年龄：&#x27;</span>))<br><span class="hljs-built_in">print</span>(age,<span class="hljs-built_in">type</span>(age))  <span class="hljs-comment"># 键入&quot;21&quot;，得&quot;21 &lt;class &#x27;int&#x27;&gt;&quot; 相当于int(age)</span><br>height = <span class="hljs-built_in">eval</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入您的身高：&#x27;</span>))<br><span class="hljs-built_in">print</span>(height,<span class="hljs-built_in">type</span>(height))  <span class="hljs-comment"># 键入&quot;180.1&quot;，得&quot;180.1 &lt;class &#x27;float&#x27;&gt;&quot; 相当于float(height)</span><br><br><span class="hljs-comment"># eval()报错情况</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">eval</span>(<span class="hljs-string">&#x27;hello&#x27;</span>))  <span class="hljs-comment"># NameError: name &#x27;hello&#x27; is not defined.</span><br></code></pre></td></tr></table></figure><h2 id="不同的进制数"><a href="#不同的进制数" class="headerlink" title="不同的进制数"></a>不同的进制数</h2><p>进制数的进位</p><ul><li>二进制：0或1组成，满二进一，以Ob开头或0B开头</li><li>八进制：0～7组成，满八进一，以Oo或0O开头</li><li>十进制：0～9组成，满十进一</li><li>十六进制：0～9和a～f或A～F组成，满十六进一，以0x或0X开头</li></ul><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><p>算术运算符是处理四则运算的符号，在数字的处理中应用的最多</p><table><thead><tr><th align="left">运算符</th><th align="left">说明</th><th align="left">示例</th><th align="left">结果</th></tr></thead><tbody><tr><td align="left">+</td><td align="left">加</td><td align="left">1+1</td><td align="left">2</td></tr><tr><td align="left">-</td><td align="left">减</td><td align="left">1-1</td><td align="left">0</td></tr><tr><td align="left">*</td><td align="left">乘</td><td align="left">2*3</td><td align="left">6</td></tr><tr><td align="left">&#x2F;</td><td align="left">除</td><td align="left">10&#x2F;2</td><td align="left">5</td></tr><tr><td align="left">&#x2F;&#x2F;</td><td align="left">整除</td><td align="left">10&#x2F;&#x2F;3</td><td align="left">3</td></tr><tr><td align="left">%</td><td align="left">取余</td><td align="left">10%3</td><td align="left">1</td></tr><tr><td align="left">**</td><td align="left">幂运算</td><td align="left">2**4</td><td align="left">16</td></tr></tbody></table><p>算术运算符的优先级：</p><ul><li>先乘除后加减</li><li>同级运算从左到右依次运算</li><li>可以使用（）调整计算优先级<ul><li>第一级：**</li><li>第二级：*，&#x2F;，%，&#x2F;&#x2F;</li><li>第三级：+，-</li></ul></li></ul><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><p>主要用于为变量进行赋值<br>直接把赋值运算符“&#x3D;”右边的值赋给左边的变量</p><table><thead><tr><th align="left">运算符</th><th align="left">说明</th><th align="left">示例</th><th align="left">展开形式</th></tr></thead><tbody><tr><td align="left">&#x3D;</td><td align="left">简单的赋值运算</td><td align="left">x&#x3D;y</td><td align="left">x&#x3D;y</td></tr><tr><td align="left">+&#x3D;</td><td align="left">加赋值</td><td align="left">x+&#x3D;y</td><td align="left">x&#x3D;x+y</td></tr><tr><td align="left">-&#x3D;</td><td align="left">减赋值</td><td align="left">x-&#x3D;y</td><td align="left">x&#x3D;x-y</td></tr><tr><td align="left">*&#x3D;</td><td align="left">乘赋值</td><td align="left">x*&#x3D;y</td><td align="left">x&#x3D;x*y</td></tr><tr><td align="left">&#x2F;&#x3D;</td><td align="left">除赋值</td><td align="left">x&#x2F;&#x3D;y</td><td align="left">x&#x3D;x&#x2F;y</td></tr><tr><td align="left">%&#x3D;</td><td align="left">取余赋值</td><td align="left">x%&#x3D;y</td><td align="left">x&#x3D;x%y</td></tr><tr><td align="left">**&#x3D;</td><td align="left">幂赋值</td><td align="left">x**&#x3D;y</td><td align="left">x&#x3D;x**y</td></tr><tr><td align="left">&#x2F;&#x2F;&#x3D;</td><td align="left">整除赋值</td><td align="left">x&#x2F;&#x3D;y</td><td align="left">x&#x3D;x&#x2F;y</td></tr></tbody></table><p>另外，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># python支持链式赋值</span><br>a=b=c=<span class="hljs-number">100</span>  <span class="hljs-comment"># 相当于执行了 a=100 b=100 c=100</span><br><span class="hljs-comment"># python支持系列解包赋值</span><br>a,b=<span class="hljs-number">10</span>,<span class="hljs-number">20</span>  <span class="hljs-comment"># 相当于执行了 a=10 b=20</span><br><br><span class="hljs-comment"># python中交换两个变量的值</span><br>b,a=a,b<br></code></pre></td></tr></table></figure><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><p>也称关系运算符，用于对变量或表达式的结果进行大小、真假等比较，如果比较结果为真，则值为True，比较结果为假，值为False</p><table><thead><tr><th align="left">运算符</th><th align="left">作用</th><th align="left">举例</th><th align="left">结果</th></tr></thead><tbody><tr><td align="left">&gt;</td><td align="left">大于</td><td align="left">98&gt;90</td><td align="left">True</td></tr><tr><td align="left">&lt;</td><td align="left">小于</td><td align="left">98&lt;90</td><td align="left">False</td></tr><tr><td align="left">&#x3D;&#x3D;</td><td align="left">等于</td><td align="left">98&#x3D;&#x3D;90</td><td align="left">False</td></tr><tr><td align="left">!&#x3D;</td><td align="left">不等于</td><td align="left">98!&#x3D;90</td><td align="left">True</td></tr><tr><td align="left">&gt;&#x3D;</td><td align="left">大于等于</td><td align="left">98&gt;&#x3D;98</td><td align="left">True</td></tr><tr><td align="left">&lt;&#x3D;</td><td align="left">小于等于</td><td align="left">98&lt;&#x3D;98</td><td align="left">True</td></tr></tbody></table><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p>逻辑运算符是对真和假两种布尔值进行运算，运算的结果仍是个布尔值</p><table><thead><tr><th align="left">运算符</th><th align="left">含义</th><th align="left">用法</th><th align="left">结合方向</th></tr></thead><tbody><tr><td align="left">and</td><td align="left">逻辑与</td><td align="left">表达式1 and 表达式2</td><td align="left">从左到右</td></tr><tr><td align="left">or</td><td align="left">逻辑或</td><td align="left">表达式1 or 表达式2</td><td align="left">从左到右</td></tr><tr><td align="left">not</td><td align="left">逻辑非</td><td align="left">not 表达式</td><td align="left">从右到左</td></tr></tbody></table><p>使用逻辑运算符进行逻辑运算的结果如下</p><table><thead><tr><th align="left">表达式1</th><th align="left">表达式2</th><th align="left">1 and 2</th><th align="left">1 or 2</th><th align="left">not 1</th></tr></thead><tbody><tr><td align="left">T</td><td align="left">T</td><td align="left">T</td><td align="left">T</td><td align="left">F</td></tr><tr><td align="left">T</td><td align="left">F</td><td align="left">F</td><td align="left">T</td><td align="left">F</td></tr><tr><td align="left">F</td><td align="left">T</td><td align="left">F</td><td align="left">T</td><td align="left">T</td></tr><tr><td align="left">F</td><td align="left">F</td><td align="left">F</td><td align="left">F</td><td align="left">T</td></tr></tbody></table><blockquote><p>注：上表T代表True，F代表False  </p><ul><li>A and B中，若A为False，则不对B进行计算，直接输出False</li><li>A or B中，若A为true，则不对B进行计算，直接输出True<br>not 中，<code>print(not(8&gt;7))</code>输出结果为False</li></ul></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python入门笔记（三）</title>
    <link href="/25237.html"/>
    <url>/25237.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>人生苦短 我用Python</p><span id="more"></span><hr><h3 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h3><h4 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h4><p>反斜杠字符(\)是一个特殊字符，在Python字符串中表示“转义”，该字符与后面相邻的一个字符共同组成一个新的含义。<br>在字符串界定符前加上r或R，转义字符失效，将原样输出。</p><table><thead><tr><th align="center">转义字符</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center"><code>\n</code></td><td align="center">换行符</td></tr><tr><td align="center"><code>\t</code></td><td align="center">水平制表符，横向跳转到下一个制表位</td></tr><tr><td align="center"><code>\&quot;</code></td><td align="center">双引号</td></tr><tr><td align="center"><code>\&#39;</code></td><td align="center">单引号</td></tr><tr><td align="center"><code>\\</code></td><td align="center">一个反斜杠</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 8.转义字符</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Paneer&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;真帅&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;-----------&#x27;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Paneer\n真帅&#x27;</span>)  <span class="hljs-comment"># 遇到\n即换行，可连续进行换行。</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">r&#x27;Paneer\n真帅&#x27;</span>)  <span class="hljs-comment"># 在界定符&#x27;&#x27;前加r(R)，则原样输出</span><br></code></pre></td></tr></table></figure><h4 id="字符串的索引"><a href="#字符串的索引" class="headerlink" title="字符串的索引"></a>字符串的索引</h4><p>对字符串中某个字符的检索称作索引<br>语法结构为：</p><div class="code-wrapper"><pre><code class="hljs">字符串或字符串变量[序号]</code></pre></div><blockquote><p>注，正向递增序号从“0”开始，反向递减序号从“-1”开始</p></blockquote><h4 id="字符串的切片"><a href="#字符串的切片" class="headerlink" title="字符串的切片"></a>字符串的切片</h4><p>对字符串中某个子串或区间的检索称为切片<br>语法结构为：</p><div class="code-wrapper"><pre><code class="hljs">字符串或字符串变量[N:M]</code></pre></div><p>切片获取字符串中从N(包含)到M(不包含)的子字符串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 9.字符串的索引和切片</span><br>s = <span class="hljs-string">&#x27;helloworld&#x27;</span><br><span class="hljs-built_in">print</span>(s[<span class="hljs-number">1</span>],s[-<span class="hljs-number">9</span>])  <span class="hljs-comment"># 输出&quot;e e&quot;，对于字符串&quot;s&quot;来讲正向第&quot;1&quot;个（从0开始）和逆向第&quot;9&quot;个都是&quot;e&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;helloworld&#x27;</span>[<span class="hljs-number">9</span>])<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;helloworld&#x27;</span>[-<span class="hljs-number">1</span>])<br><br><span class="hljs-built_in">print</span>(s[<span class="hljs-number">2</span>:<span class="hljs-number">7</span>])  <span class="hljs-comment"># 正向递增序列切片</span><br><span class="hljs-built_in">print</span>(s[-<span class="hljs-number">8</span>:-<span class="hljs-number">3</span>])  <span class="hljs-comment"># 逆向递减序列切片</span><br><span class="hljs-comment"># N 默认是0</span><br><span class="hljs-built_in">print</span>(s[:<span class="hljs-number">5</span>])<br><span class="hljs-comment"># M 默认是到字符串结尾</span><br><span class="hljs-built_in">print</span>(s[<span class="hljs-number">5</span>:])<br></code></pre></td></tr></table></figure><h4 id="字符串类型的操作"><a href="#字符串类型的操作" class="headerlink" title="字符串类型的操作"></a>字符串类型的操作</h4><table><thead><tr><th align="left">操作符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">x+y</td><td align="left">连接两个字符x与y</td></tr><tr><td align="left">x*n或n*x</td><td align="left">复制n次字符串</td></tr><tr><td align="left">x in s</td><td align="left">若x是s的子串，则结果为true，否则为false</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 10.字符串类型的操作</span><br>x = <span class="hljs-string">&#x27;2022年&#x27;</span><br>y = <span class="hljs-string">&#x27;北京冬奥会&#x27;</span><br><span class="hljs-built_in">print</span>(x+y)<br><span class="hljs-built_in">print</span>(<span class="hljs-number">10</span>*x,x*<span class="hljs-number">10</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;北京&#x27;</span> <span class="hljs-keyword">in</span> y)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;上海&#x27;</span> <span class="hljs-keyword">in</span> y)<br></code></pre></td></tr></table></figure><h3 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a>布尔类型</h3><ul><li>用来表示真值或假值</li><li>在Python中使用标识符<code>True</code>和<code>False</code>表示布尔类型的值</li><li>布尔类型可转换化为数值，<code>True</code>表示1 <code>False</code>表示O</li><li>所有对象都有一个布尔值，使用内置函数<code>bool()</code>进行测试</li><li>布尔值为假的情况<ul><li><code>False</code>或者是<code>None</code></li><li>数值中的0，包含0，0.0，虚数0</li><li>空序列,包含空字符串、空元组、空列表、空字典</li><li>自定义对象的实例，该对象的<code>__bool()__</code>方法返回<code>False</code>或<code>__len___()</code>方法返回0</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 11.布尔类型</span><br>x = <span class="hljs-literal">True</span><br><span class="hljs-built_in">print</span>(x)  <span class="hljs-comment"># 输出&quot;True&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(x))  <span class="hljs-comment"># 输出&quot;&lt;class &#x27;bool&#x27;&gt;&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-literal">True</span>+<span class="hljs-number">10</span>)  <span class="hljs-comment"># 1+10</span><br><span class="hljs-built_in">print</span>(<span class="hljs-literal">False</span>+<span class="hljs-number">10</span>)  <span class="hljs-comment"># 0+10</span><br><br><span class="hljs-comment"># 测试对象的布尔值</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(<span class="hljs-number">18</span>))  <span class="hljs-comment"># True</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(<span class="hljs-number">0</span>),<span class="hljs-built_in">bool</span>(<span class="hljs-number">0.0</span>))  <span class="hljs-comment"># False</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(<span class="hljs-string">&#x27;北京欢迎你&#x27;</span>))  <span class="hljs-comment"># True</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(<span class="hljs-string">&#x27;&#x27;</span>))  <span class="hljs-comment"># 空字符串，False</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(<span class="hljs-literal">False</span>))  <span class="hljs-comment"># False</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(<span class="hljs-literal">None</span>))  <span class="hljs-comment"># False</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>test page (music)</title>
    <link href="/1.html"/>
    <url>/1.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="音乐播放器测试-进来听歌"><a href="#音乐播放器测试-进来听歌" class="headerlink" title="音乐播放器测试(进来听歌)"></a>音乐播放器测试(进来听歌)</h1><span id="more"></span>    <div id="aplayer-tuUPwznD" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="541687281" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#49A6F9" data-volume="0.5"    ></div><blockquote><p>Embed aplayer in Hexo posts&#x2F;pages. <a href="https://github.com/MoePlayer/hexo-tag-aplayer">GitHub 项目地址</a>，感谢作者。</p></blockquote><p>插件功能很强大，这里主要介绍如何使用其中一个功能<code>MeingJS</code>，想了解更多功能可以去看<a href="https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md">官方文档</a>。</p><p><code>MeingJS</code>支持从网易云音乐等平台获取 id（歌曲 id &#x2F; 播放列表 id &#x2F; 相册 id &#x2F; 搜索关键字）后配合代码模板，即可在页面显示。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><div class="code-wrapper"><pre><code class="hljs">npm install --save hexo-tag-aplayer</code></pre></div><blockquote><p>若无法正常显示播放器，则可能是下列 js 版本过低</p><ul><li>APlayer.js &gt; 1.8.0</li><li>Meting.js &gt; 1.1.1</li></ul></blockquote><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol><li>配置hexo配置文件<code>_config.yml</code>，添加如下（在文件最后直接粘贴即可）：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><pre><code class="hljs ymal">aplayer: <br>  meting: true<br># 注意，冒号后要加一个空格<br></code></pre></td></tr></table></figure><ol start="2"><li>获取歌词、歌单ID。</li></ol><blockquote><p>没什么多说的，教程很多。<br>注，此测试页用的id为 4966259071</p></blockquote><ol start="3"><li><p>在markdown文件中添加如下代码模版即可：</p><div class="code-wrapper"><pre><code class="hljs"> &#123;% meting "获取的id" "netease" "song" "mini:ture" "volume:0.5" "theme:#49A6F9" %&#125;</code></pre></div></li></ol><p>注意，该代码模版可能不会在markdown渲染器中渲染出来(类似插入图片，详细参考<a href="%E6%88%91%E7%9A%84Markdown%E7%AC%94%E8%AE%B0.md">Markdown速查表</a>)<br>4. hexo clean &amp; hexo g &amp; hexo d 三连即可看到！</p><h2 id="标签参数"><a href="#标签参数" class="headerlink" title="标签参数"></a>标签参数</h2><blockquote><p>下表中的<code>音乐平台</code>分别代表：<code>网易云</code>、<code>QQ音乐</code>、<code>酷狗</code>、<code>百度</code><br>可按照此表在代码模板中修改</p></blockquote><table><thead><tr><th align="left">选项</th><th align="left">默认值</th><th>描述</th></tr></thead><tbody><tr><td align="left">id</td><td align="left">必须值</td><td>歌曲 id &#x2F; 播放列表 id &#x2F; 相册 id &#x2F; 搜索关键字</td></tr><tr><td align="left">server</td><td align="left">必须值</td><td>音乐平台: netease, tencent,kugou,baidu</td></tr><tr><td align="left">type</td><td align="left">必须值</td><td>song, playlist, album, search, artist</td></tr><tr><td align="left">fixed</td><td align="left">false</td><td>开启固定模式</td></tr><tr><td align="left">mini</td><td align="left">false</td><td>开启迷你模式</td></tr><tr><td align="left">loop</td><td align="left">all</td><td>列表循环模式：all, one,none</td></tr><tr><td align="left">order</td><td align="left">list</td><td>列表播放模式： list, random</td></tr><tr><td align="left">volume</td><td align="left">0.7</td><td>播放器音量</td></tr><tr><td align="left">lrctype</td><td align="left">0</td><td>歌词格式类型</td></tr></tbody></table><p>参考链接：<a href="https://plushine.cn/54808.html#%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8">XJHui’sBlog</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python入门笔记（二）</title>
    <link href="/28396.html"/>
    <url>/28396.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>人生苦短 我用Python</p><span id="more"></span><hr><h2 id="Python中的注释"><a href="#Python中的注释" class="headerlink" title="Python中的注释"></a>Python中的注释</h2><p>什么是注释？</p><ul><li>是指程序员在代码中对代码功能解释说明的文字，可以提高代码的可读性</li><li>注释的内容将被Python解释器忽略，不被计算机执行</li></ul><p>注释的分类？</p><ul><li>单行注释<ul><li>以“#”作为单行注释的符号，作用范围从“#”开始直到换行为止</li></ul></li><li>多行注释<ul><li>Python中并没有单独的多行注释标记，将包含在一对三引号[‘’’…’’’]OR[“””…”””]之间的代码称为多行注释</li></ul></li><li>中文注释声明<ul><li># coding:utf-8 或 #coding&#x3D;utf-8 或 #-*-coding:utf-8-*-</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 10.单行注释</span><br><span class="hljs-comment"># 要求从键盘去输入出生年份，举例：1998</span><br>year = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入您的出生年份：&#x27;</span>)<br><br>year = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入您的出生年份：&#x27;</span>)  <span class="hljs-comment"># 要求从键盘去输入出生年份，举例：1998</span><br><br><span class="hljs-comment"># 11.多行注释</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">参考视频：马士兵教育</span><br><span class="hljs-string">分节名：11.多行注释</span><br><span class="hljs-string">创建人：Paneer</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-comment"># -*- OR -*- #</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">参考视频：马士兵教育</span><br><span class="hljs-string">分节名：11.多行注释</span><br><span class="hljs-string">创建人：Paneer</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br><span class="hljs-comment"># 12.中文声明注释</span><br><br><span class="hljs-comment"># 在Python2.x中，使用中文注释时必须要加上中文声明注释。在Python3.x中可加可不加。</span><br><span class="hljs-comment"># coding:utf-8</span><br><span class="hljs-comment"># 此声明若加的话务必加在代码首行。</span><br><span class="hljs-comment"># 写好注释至关重要哦~</span><br></code></pre></td></tr></table></figure><h2 id="代码缩进"><a href="#代码缩进" class="headerlink" title="代码缩进"></a>代码缩进</h2><p>Python语言采用严格的“缩进”来表示程序逻辑</p><ul><li>缩进是指每行语句开始前的空白区域，用来表示Python程序间的包含和层次关系</li><li>一般代码不需要缩进，顶行编写且不留空白</li><li>类定义、函数定义、流程控制语句，以及异常处理语句等，行尾的冒号和下一行的缩进表示一个代码块的开始，而缩进结束则表示一个代码块的结束</li><li>缩进可以使用空格或Tab键来实现，通常情况下采用四个空格作为一个缩进量</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 13.代码缩进</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;hello&#x27;</span>)<br> <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;hello&#x27;</span>)  <span class="hljs-comment">#此情况下会报错：IndentationError: unexpected indent,解决办法是删掉第二个print前的空格</span><br> <br><span class="hljs-comment"># 类的定义</span><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Student</span>:<br>    <span class="hljs-keyword">pass</span><br><span class="hljs-comment"># 函数定义</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">fun</span>():<br>    <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><h2 id="在Python交互式模式中运行-py文件"><a href="#在Python交互式模式中运行-py文件" class="headerlink" title="在Python交互式模式中运行*.py文件"></a>在Python交互式模式中运行*.py文件</h2><p>首先确保电脑已经安装好python且配置好了环境变量，其语法格式为：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs DOS">python 完整文件名（包括路径）<br></code></pre></td></tr></table></figure><h2 id="数据类型和基本运算符"><a href="#数据类型和基本运算符" class="headerlink" title="数据类型和基本运算符"></a>数据类型和基本运算符</h2><h3 id="保留字与标识符"><a href="#保留字与标识符" class="headerlink" title="保留字与标识符"></a>保留字与标识符</h3><p>保留字：<br>保留字是Python已经被赋予特定意义的一些单词，在开发程序时，不可以把这些保留字作为变量、函数、类、模块和其他对象的名称来使用<br>保留字表如下所示：</p><table><thead><tr><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th><th align="center"></th></tr></thead><tbody><tr><td align="center">and</td><td align="center">as</td><td align="center">assert</td><td align="center">break</td><td align="center">class</td><td align="center">continue</td><td align="center">def</td><td align="center">del</td><td align="center">elif</td><td align="center">else</td><td align="center">except</td></tr><tr><td align="center">finally</td><td align="center">for</td><td align="center">from</td><td align="center">False</td><td align="center">global</td><td align="center">if</td><td align="center">import</td><td align="center">in</td><td align="center">is</td><td align="center">lambda</td><td align="center">nonlocal</td></tr><tr><td align="center">not</td><td align="center">None</td><td align="center">or</td><td align="center">pass</td><td align="center">raise</td><td align="center">return</td><td align="center">try</td><td align="center">True</td><td align="center">while</td><td align="center">with</td><td align="center">yield</td></tr></tbody></table><blockquote><p>注：保留字严格区分大小写，只有<strong>True</strong>、<strong>False</strong>、<strong>None</strong>为首字母大写。</p></blockquote><p>保留字查看</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 保留字的查看</span><br><span class="hljs-keyword">import</span> keyword<br><span class="hljs-built_in">print</span>(keyword.kwlist)<br></code></pre></td></tr></table></figure><p>标识符：<br>标识符可以简单的理解为是一个名字，它主要用来标识变量、函数、类、模块和其他对象的名称。  </p><blockquote><p>Python标识符的命名规则：</p><ul><li>可以是字母、下划线“_”和数字，并且第一个字符不能是数字</li><li>不能使用Python中的保留字</li><li>标识符严格区分大小写</li><li>以下划线开头的标识符有特殊意义，一般应避免使用相似的标识符</li><li>允许使用中文作为标识符，但不建议</li></ul></blockquote><p>标识符的命名规范：</p><ul><li>模块名尽量短小，并且尽量全部使用小写字母，可以使用下划线分隔多个字母。如 grame_main</li><li>包名尽量短小，并且尽量全部使用小写字母，不推荐使用下划线。如 com.paneer,不推荐com_paneer</li><li>类名采用单词首字母大写形式(Pascal风格)。如 MyClass</li><li>模块内部的类采用“_”+Pascal风格的类名组成。如在MyClass中的内部类 _InnerMyClass</li><li>函数、类的属性和方法的命名，全部使用小写字母，多个字母之间使用下划线分隔</li><li>常量命名时采用全部大写字母，可以使用下划线</li><li>使用单下划线“_”开头的模块变量或函数是受保护的，在使用<code>from xxx import *</code>语句从模块中导入时，这些模块变量或函数是不能被导入的</li><li>使用双下划线“__“开头的实例变量或方法是类私有的</li><li>以双下划线开头和结尾的是Python的专用标识。如 <code>__init__()</code> 表示初始化函数</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 2.标识符的规范</span><br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">每一个*.py文件都是一个模块，模块命名应尽量使用小写字母并使用下划线分隔</span><br><span class="hljs-string">这些*.py文件所在的文件夹称作包，包命名应尽量使用小写字母不推荐使用下划线</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyClass</span>:  <span class="hljs-comment"># 新建一个名为MyClass的类，采用Pascal风格</span><br>    <span class="hljs-keyword">class</span> <span class="hljs-title class_">_InnerMyClass</span>:  <span class="hljs-comment"># 新建一个名为 _InnerMyClass 的内部类</span><br>        <span class="hljs-keyword">pass</span><br><br><br><span class="hljs-comment"># 函数 fun &amp; fun_name 的定义</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">fun</span>():<br>    <span class="hljs-keyword">pass</span><br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">fun_name</span>():<br>    <span class="hljs-keyword">pass</span><br></code></pre></td></tr></table></figure><h2 id="Python中的变量"><a href="#Python中的变量" class="headerlink" title="Python中的变量"></a>Python中的变量</h2><p>变量是指保存和表示数值的一种语法元素，可以简单的理解为“名字”。<br>变量的值是可以改变的，可以通过赋值方式被修改。</p><blockquote><p>例如，<code>word=&#39;Paneer真帅&#39;</code>即是将“Paneer真帅”赋值给了变量“word”</p><p>可以理解为去菜鸟驿站取快递，我只需要取件码就能找到自己的快递，此时我的取件码就是一个变量，它代表的那个位置上的快递是我的，因为是菜鸟驿站的工作人员给它赋值了。</p></blockquote><h3 id="变量的定义"><a href="#变量的定义" class="headerlink" title="变量的定义"></a>变量的定义</h3><p>其语法结构为：</p><div class="code-wrapper"><pre><code class="hljs">变量名=value</code></pre></div><h3 id="变量的使用"><a href="#变量的使用" class="headerlink" title="变量的使用"></a>变量的使用</h3><p>Python是一种动态类型的语言，变量的类型可以随时变化</p><ul><li>使用内置函数<code>type()</code>可以查看变量的数据类型</li></ul><p>Python中允许多个变量指向同一个值</p><ul><li>使用内置函数<code>id()</code>可以返回变量所指的内存地址</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 3.变量的定义和使用</span><br>luck_number=<span class="hljs-number">8</span>  <span class="hljs-comment"># 创建一个整型变量luck_number，赋值为8</span><br>my_name=<span class="hljs-string">&#x27;Paneer&#x27;</span>  <span class="hljs-comment"># 创建一个字符串类型变量</span><br><span class="hljs-built_in">print</span>(my_name,<span class="hljs-string">&#x27;的幸运数字是：&#x27;</span>,luck_number)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;luck_number的数据类型是：&#x27;</span>,<span class="hljs-built_in">type</span>(luck_number))<br><br><span class="hljs-comment"># 变量的值可以更改</span><br>luck_number=<span class="hljs-string">&#x27;Emily真圆&#x27;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;luck_number的数据类型是：&#x27;</span>,<span class="hljs-built_in">type</span>(luck_number))  <span class="hljs-comment"># 此时其数据类型就是 str型（字符串型）了</span><br><br><span class="hljs-comment"># Python允许多个变量指向同一个值</span><br>no=number=<span class="hljs-number">502</span>  <span class="hljs-comment"># 给no 和number 都赋值为502</span><br><span class="hljs-built_in">print</span>(no,number)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">id</span>(no))  <span class="hljs-comment"># 输出no 所指向的内存地址</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">id</span>(number))  <span class="hljs-comment">#输出number 所指向的内存地址，会发现与no 的相同</span><br></code></pre></td></tr></table></figure><p>变量命名应遵循以下几条规则</p><blockquote><ul><li>变量名必须是一个有效的标识符</li><li>变量名不能使用Python中的保留字</li><li>慎用小写字母l和大写字母O</li><li>应选择有意义的单词作为变量名</li></ul></blockquote><p>同样的，常量也应遵循以下规则</p><blockquote><ul><li>常量就是在程序运行过程中值不能改变的量。如PI</li><li>Python中没有定义常量的保留字</li><li>常量规定使用大写字母和下划线组成</li><li>常量首次赋值之后，还是可以被其他代码修改的</li></ul></blockquote><h2 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h2><h3 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h3><h4 id="整数类型特点"><a href="#整数类型特点" class="headerlink" title="整数类型特点"></a>整数类型特点</h4><ul><li>表示整数数值，即没有小数部分的数值</li><li>正整数、负数和0</li><li>理论取值范围为（负无穷，正无穷）</li><li>整数的表示类型</li><li>不可变的数据类型</li></ul><table><thead><tr><th align="center">进制种类</th><th align="center">引导符号</th><th align="center">概述</th></tr></thead><tbody><tr><td align="center">十进制</td><td align="center">无</td><td align="center">默认情况，如 365，257</td></tr><tr><td align="center">二进制</td><td align="center">0b或0B</td><td align="center">由0，1组成，如 0b101，0B1010</td></tr><tr><td align="center">八进制</td><td align="center">0o或0O</td><td align="center">由0-7组成，如 0o367，0O666</td></tr><tr><td align="center">十六进制</td><td align="center">0x或0X</td><td align="center">由0-9，a(A)-f(F)组成，如 0x98A，0X89F</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 4.整数类型</span><br>num=<span class="hljs-number">987</span>  <span class="hljs-comment"># 默认十进制</span><br>num1=<span class="hljs-number">0b10100101</span>  <span class="hljs-comment"># 使用二进制表示整数</span><br>num2=<span class="hljs-number">0o765</span>  <span class="hljs-comment"># 使用八进制表示整数</span><br>num3=<span class="hljs-number">0x98AF</span>  <span class="hljs-comment"># 使用十六进制表示整数</span><br><span class="hljs-built_in">print</span>(num)  <span class="hljs-comment"># 输出全部为十进制</span><br><span class="hljs-built_in">print</span>(num1)  <span class="hljs-comment"># 输出全部为十进制</span><br><span class="hljs-built_in">print</span>(num2)  <span class="hljs-comment"># 输出全部为十进制</span><br><span class="hljs-built_in">print</span>(num3)  <span class="hljs-comment"># 输出全部为十进制</span><br></code></pre></td></tr></table></figure><h4 id="浮点数类型"><a href="#浮点数类型" class="headerlink" title="浮点数类型"></a>浮点数类型</h4><ul><li>表示带有小数点的数</li><li>浮点数由整数部分和小数部分组成</li><li>Python中浮点数类型必须要有小数部分，小数部分可以是0</li><li>浮点数可以使用科学计数法表示</li><li>两个浮点数相加，有一定概率运算结果后增加一些“不确定的”尾数</li><li>使用内置函数<code>round()</code>可以限定运算结果需要保留的小数位数</li><li>不可变数据类型</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 5.浮点数类型</span><br>height=<span class="hljs-number">180.1</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(height))  <span class="hljs-comment"># 可以得出height 的数据类型为float 型</span><br>x=<span class="hljs-number">10</span><br>y=<span class="hljs-number">10.0</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(x))  <span class="hljs-comment"># x为int 型</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(y))  <span class="hljs-comment"># y为float 型</span><br><span class="hljs-comment"># 浮点数相加尾数不确定问题</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">0.1</span>+<span class="hljs-number">0.2</span>)  <span class="hljs-comment"># 得结果为 0.30000000000000004，有一不确定尾数</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">round</span>(<span class="hljs-number">0.1</span>+<span class="hljs-number">0.2</span>,<span class="hljs-number">1</span>))  <span class="hljs-comment"># 保留一位小数</span><br></code></pre></td></tr></table></figure><h4 id="复数类型"><a href="#复数类型" class="headerlink" title="复数类型"></a>复数类型</h4><ul><li>Python中复数与数学中的复数形式完全一致</li><li>复数由实部和虚部组成</li><li>j是复数的一个基本单位，被定义为 j&#x3D;$\sqrt{-1}$ ，又称虚数单位</li><li><code>.real</code>获取实数部分，<code>.imag</code>获取虚数部分</li><li>不可变数据类型</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 6.复数类型</span><br>z=<span class="hljs-number">123</span>+<span class="hljs-number">456j</span>  <span class="hljs-comment"># 定义复数类型 complex型</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(z))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;实数部分：&#x27;</span>,z.real)  <span class="hljs-comment"># 输出实数部分</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;虚数部分：&#x27;</span>,z.imag)  <span class="hljs-comment"># 输出虚数部分</span><br></code></pre></td></tr></table></figure><h4 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h4><ul><li>字符串就是连续的字符序列，，可以表示计算机所能识别的一切字符</li><li>不可变数据类型，，即不可变字符序列</li><li>单行字符串使用’…’或”…”</li><li>多行字符串使用’’’…’’’或”””…”””</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 7.字符串类型</span><br><span class="hljs-comment"># 单行字符串</span><br>city=<span class="hljs-string">&#x27;菏泽&#x27;</span><br>address=<span class="hljs-string">&quot;山东省菏泽市&quot;</span><br><span class="hljs-built_in">print</span>(city)<br><span class="hljs-built_in">print</span>(address)<br><br><span class="hljs-comment"># 多行字符串</span><br>info=<span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">地址：山东省菏泽市</span><br><span class="hljs-string">收件人：Paneer</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-built_in">print</span>(info)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>专业词汇表（一）</title>
    <link href="/25723.html"/>
    <url>/25723.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="专业词汇表（一）"><a href="#专业词汇表（一）" class="headerlink" title="专业词汇表（一）"></a>专业词汇表（一）</h1><p>第一章 蛋白质的结构与功能</p><span id="more"></span><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>protein</td><td>蛋白质</td></tr><tr><td>amino acid</td><td>氨基酸</td></tr><tr><td>isoelectric point, pI</td><td>等电点</td></tr><tr><td>peptide bond</td><td>肽键</td></tr><tr><td>peptide</td><td>肽</td></tr><tr><td>peptide unit</td><td>肽单元</td></tr><tr><td>oligopeptide</td><td>寡肽</td></tr><tr><td>polypeptide</td><td>多肽</td></tr><tr><td>neuropeptide</td><td>神经肽</td></tr><tr><td>residue</td><td>氨基酸残基</td></tr><tr><td>amino terminal</td><td>N端</td></tr><tr><td>carboxyl terminal</td><td>C端</td></tr><tr><td>glutathione，GSH</td><td>谷胱甘肽</td></tr><tr><td>conformation</td><td>高级结构、空间构象</td></tr><tr><td>primary structure</td><td>一级结构</td></tr><tr><td>secondary structure</td><td>二级结构</td></tr><tr><td>α-helix</td><td>螺旋</td></tr><tr><td>β-sheet</td><td>折叠</td></tr><tr><td>β-turn</td><td>转角</td></tr><tr><td>random coil</td><td>无规则卷曲</td></tr><tr><td>super-secondary</td><td>超二级结构</td></tr><tr><td>structure&#x2F; motif</td><td>模体</td></tr><tr><td>tertiary structure</td><td>三级结构</td></tr><tr><td>domain</td><td>结构域</td></tr><tr><td>chaperon</td><td>分子伴侣</td></tr><tr><td>quaternary structure</td><td>四级结构</td></tr><tr><td>subunit</td><td>亚基</td></tr><tr><td>sickle cell anemia</td><td>镰刀型细胞贫血</td></tr><tr><td>myoglobin,  Mb</td><td>肌红蛋白</td></tr><tr><td>hemoglobin, Hb</td><td>血红蛋白</td></tr><tr><td>cooperativity effect</td><td>协同效应</td></tr><tr><td>positive cooperativity</td><td>正协同效应</td></tr><tr><td>negative cooperativity</td><td>负协同效应</td></tr><tr><td>tense state</td><td>紧张态,  T态</td></tr><tr><td>relaxed state</td><td>松弛态 ，R态</td></tr><tr><td>allosteric effect</td><td>别构效应</td></tr><tr><td>allosteric effector</td><td>别构效应剂</td></tr><tr><td>allosteric protein</td><td>别构蛋白</td></tr><tr><td>protein conformational disease</td><td>分子构象病</td></tr><tr><td>prion protein， PrP</td><td>朊病毒</td></tr><tr><td>denaturation</td><td>变性</td></tr><tr><td>renaturation</td><td>复性</td></tr><tr><td>protein coagulation</td><td>凝固作用</td></tr><tr><td>biuret reaction</td><td>双缩脲反应</td></tr><tr><td>dialysis</td><td>透析</td></tr><tr><td>electrophoresis</td><td>电泳</td></tr><tr><td>SDS-PAGE</td><td>SDS-聚丙烯酰胺凝胶电泳</td></tr><tr><td>SDS</td><td>十二烷基磺酸钠</td></tr><tr><td>salt precipitation</td><td>盐析</td></tr><tr><td>chromatography</td><td>层析</td></tr><tr><td>gel filtration</td><td>凝胶过滤</td></tr><tr><td>ultracentrifugation</td><td>超速离心法</td></tr></tbody></table>]]></content>
    
    
    
    <tags>
      
      <tag>WordList_E</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SRIM入门</title>
    <link href="/11784.html"/>
    <url>/11784.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="我的SRIM入门"><a href="#我的SRIM入门" class="headerlink" title="我的SRIM入门"></a>我的SRIM入门</h1><span id="more"></span><h2 id="写在前面的废话"><a href="#写在前面的废话" class="headerlink" title="写在前面的废话"></a>写在前面的废话</h2><p>博主的毕业设计需要用到SRIM软件来模拟某种材料在经历某种辐照下的损伤情况，故学习该软件并整理得此笔记。  </p><p>博主在《核测量仪器》一门课中已经对TRIM有了一定程度了解(感谢许老师给予的帮助)，虽仍有较多不懂之处，但也相当于有一定的基础。为了系统的去整理，博主会尽量的以一个零基础学者来进行整理记录，但过于简单之处将会略去。</p><h2 id="一些基础知识"><a href="#一些基础知识" class="headerlink" title="一些基础知识"></a>一些基础知识</h2><p>SRIM程序可以模拟离子辐照靶材料的过程，计算出离子在靶材料内造成的辐照损伤程度，用 dpa (displacements per atom)指标来确定，即在给定注量下每个原子平均的离位次数。SRIM程序基于蒙特卡罗方法，计算相对简单，在使用离子束辐照材料的实验中，大多数通过 SRIM 程序的模拟数据来得到 dpa 的值。  </p><p>另外，由于中子辐照试验操作复杂、时间漫长、费用昂贵，因此在实验中普遍利用离子辐照代替中子辐照。   </p><p>SRIM程序常用的计算模式主要有两种：</p><ul><li>“Ion Distribution and Quick Calculation of Damage”<br>简称 K-P 模式，模拟过程中追踪入射离子及初级离位原子，只考虑入射离子和初级离位原子在靶材料中的碰撞过程；</li><li>“Detailed Calculation with full Damage Cascade”<br>简称 Full Cascade 模式，模拟过程中追踪入射离子、初级离位原子和所有的次级离位原子，考虑了入射离子和各级离位原子的碰撞，计算级联碰撞在靶材料中造成的全部损伤。</li></ul><p>从两种模式的运行方式来看，应该是 Full Cascade 模式获得的 dpa 值更接近真实情况。然而在利用离子来模拟反应堆中子辐照的实验中，比较离子和中子辐照数据，K-P 模式获得的结果与中子实验和模拟结果更接近，Full Cas-cade 模式获得的数据偏差较大。若要利用离子来模拟中子辐照，以前的离子辐照实验大多是使用 Full Cascade 模式进行运算的，因此需要计算 K-P 模式下的模拟结果，与 Full Cas-cade 模式下的计算结果进行比较。</p><p>接下来，博主通过两个demo来详细介绍 SRIM</p><h2 id="demo1-离子在固体中的射程、剂量及辐照损伤简述"><a href="#demo1-离子在固体中的射程、剂量及辐照损伤简述" class="headerlink" title="demo1 离子在固体中的射程、剂量及辐照损伤简述"></a>demo1 离子在固体中的射程、剂量及辐照损伤简述</h2><h3 id="学习目标："><a href="#学习目标：" class="headerlink" title="学习目标："></a>学习目标：</h3><p>掌握如何确定离子的能量和剂量，使其注入靶后能达到我们所要求的浓度和深度，从而能够回答将任意粒子注入到任意靶材料情况下的问题。</p><h3 id="demo条件："><a href="#demo条件：" class="headerlink" title="demo条件："></a>demo条件：</h3><p>我们以在CMOS半导体器件中注入n型井为例。  </p><p>注入硅中的离子（即注入原子）应为n型元素，并在表面以下约250nm（2500Ang）深处达到浓度峰值（以投影射程计）。掺杂原子的浓度为每平方厘米5E18个离子。</p><p>看起来很复杂？其实就是磷（P）或砷（As）或锑（Sb）元素的离子被直接注入到样品的一定深度并形成一定的浓度。  </p><p>另外，还有一个附加条件，我们假定注入离子的能量不超过200keV（实际中加速器加速的粒子能量不超过该值）。</p><blockquote><p>注意，TRIM 中很多情况下使用的单位是Ang（埃），因为其大约是固体中单层原子的厚度，这常用于估计靶的围观损伤，</p></blockquote><p>我们将问题整理如下：</p><ul><li>注入元素是？</li><li>需要注入的剂量(ions&#x2F;cm<sup>2</sup>)？</li><li>靶在注入后是否会产生非晶化？</li></ul><h4 id="确定入射粒子的种类与能量"><a href="#确定入射粒子的种类与能量" class="headerlink" title="确定入射粒子的种类与能量"></a>确定入射粒子的种类与能量</h4><ul><li>打开 SRIM-2013 软件</li><li>点击 Stopping and Range Tables (S&amp;R Tables)<ol><li>首先输入离子。开始可以点击“ION”旁的帮助按钮即“？”。</li><li>为了在 Si 中注入一个n型井，我们要从元素周期表第五列元素中选择一种元素来作为杂质元素注入。我们选择 As 来开始。点击窗口中“Ion”旁的“PT”键来打开元素周期表并选择 As 来作为入射粒子。</li><li>此时程序将会自动填充描述输入离子性质的各种选项。注意此时使用的离子质量并不是 As 的平均原子质量，而是丰度最大的同位素(MAI)的质量。</li><li>在窗口中向下来到“Target”按钮，旁边有帮助按钮“？”。</li><li>利用“PT”按钮选择“Si”，选定靶的成分为硅。注意到靶原子质量不再是 MAI ，而是元素的平均值然质量。</li><li>剩下描述靶的表格是空白的，也是非必需的，选项“Stoich”则是用于计算混合物靶时指定其中每种元素的化学计量。举例，若靶中有 Si 和 Ge 且其“Stoich“中数字均为1，则证明其元素比为1:1，各占百分之五十。</li><li>另外，最后的“gas“处，若靶为气态则应打勾，反之不然。</li><li>点击 ”Calculate Table“ 按钮进行计算。</li><li>计算结果会储存在：”SRIM Outputs\Arsenic in Silicon“中，如果你需要再次查询它的话，其文件路径为： …&#x2F;SRIM Outputs&#x2F;</li></ol></li></ul><p>接下来我们观察输出文件:</p><table><thead><tr><th align="center">Ion Energy</th><th align="center">dE&#x2F;dx Elec.</th><th align="center">dE&#x2F;dx Nuclear</th><th align="center">Projected Range</th><th align="center">Longitudinal Straggling</th><th align="center">Lateral Straggling</th></tr></thead><tbody><tr><td align="center">10 keV</td><td align="center">2.75E-01</td><td align="center">4.06E+00</td><td align="center">124 A</td><td align="center">47 A</td><td align="center">35 A</td></tr><tr><td align="center">11 keV</td><td align="center">2.89E-01</td><td align="center">4.16E+00</td><td align="center">131 A</td><td align="center">49 A</td><td align="center">37 A</td></tr><tr><td align="center">…</td><td align="center">…</td><td align="center">…</td><td align="center">…</td><td align="center">…</td><td align="center">…</td></tr><tr><td align="center">375 keV</td><td align="center">1.94E+00</td><td align="center">4.05E+00</td><td align="center">2404 A</td><td align="center">590 A</td><td align="center">462 A</td></tr><tr><td align="center"><em><strong>400</strong></em> keV</td><td align="center">2.01E+00</td><td align="center">3.96E+00</td><td align="center"><em><strong>2566</strong></em> A</td><td align="center">622 A</td><td align="center">489 A</td></tr></tbody></table><p>2500A的投影射程对应入射离子能量将近400keV。<br>故我们可以得出如下结论：  </p><ul><li>这是一个高于200keV的离子注入机所能达到的能量！</li><li>我们应使用 P 离子入射，重新计算这个射程表格。</li></ul><p>计算磷离子的射程表格为：</p><table><thead><tr><th>Ion Energy</th><th>dE&#x2F;dx Elec.</th><th>dE&#x2F;dx Nuclear</th><th>Projected Range</th><th>Longitudinal Straggling</th><th>Lateral Straggling</th></tr></thead><tbody><tr><td>10 keV</td><td>3.90E-01</td><td>1.87E+00</td><td>169 A</td><td>83 A</td><td>60 A</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td></tr><tr><td>180 keV</td><td>1.83E+00</td><td>1.11E+00</td><td>2359 A</td><td>709 A</td><td>565 A</td></tr><tr><td>200 keV</td><td>1.91E+00</td><td>1.05E+00</td><td>2612 A</td><td>761 A</td><td>615 A</td></tr></tbody></table><p>观察可得，我们可以注入190 keV的磷离子来产生一个浓度峰在2500A的n型井（由内插法可得）</p><p>继续我们的步骤，在离开Stopping and Range 窗口前，可以点击“？”来参考其他帮助信息。</p><h4 id="190keV-的磷离子产生的损伤"><a href="#190keV-的磷离子产生的损伤" class="headerlink" title="190keV 的磷离子产生的损伤"></a>190keV 的磷离子产生的损伤</h4><ol><li>在主菜单上 TRIM Calculation 按钮旁有一个帮助按钮“？”，点击它可以阅读该程序的教程。</li><li>TRIM（Transport of Ions in Matter）是一个非常复杂的程序。<br>它不仅可以描述离子在物质中的射程，还可以详细计算注入离子在慢化过程中对靶产生损伤等其他信息。<br>它可以使用动画让你看到离子注入到靶中的全过程，并给你展示级联反冲粒子和靶原子混合在一起的情形。<br>为了精确估计每个离子和靶原子间相遇时的物理情形，程序只能一次对一个粒子进行计算。这样的话，计算可能消耗可观的时间计算每个离子花费的时间从一秒到几分钟不等。<br>而精确度由模拟采用的离子数来决定。典型的情况是，应用 1000个离子进行计算将得到好于10%的精确度。</li><li>点击 TRIM Calculation 按钮</li><li>在TRIM窗口中，ION DATA(离子数据)板块点击“PT“按钮，选择磷元素，此时离子的其他参数会被自动填入。</li><li>设置ION DATA中”Energy(keV)“窗口值为190.即上一部分时我们得到的能量值。</li><li>继续设置TARGET DATA(靶数据)，此处最多可设置为20层由混合物构成的靶，但在此demo中我们只使用简单的单质硅基体。</li><li>找到靶的“PT”按钮，选择“Si”</li><li>在设置靶层数等左下板块，找到“Width”输入框，输入3500 Ang，设置靶的厚度。因为我们所关心的是2500埃处的情况，对于大于2500埃的地方发生什么并不关心，故此厚度足够。</li><li>在TARGET DATA输入板块左边的“LayerName”输入框，输入Si(用以代替默认命名)。</li><li>接下来我们将考虑需要进行计算的类型。<br>TRIM既可以进行一些概略计算，如阻止本领和射程（SR）的计算，其执行时间通常不超过一秒，也可以进行一些复杂计算，如离子和靶之间每次相互作用的详细计算，在这种计算中，模拟每 100 个离子可能需要花费几个小时。<br>计算类型可使用“Type of TRIM Calculation”（TRIM 计算类型）下面的两个下拉菜单来设置。</li><li>注意右上角的选项框“DAMAGE”。在它右边是帮助选项框“？” <em><strong>注意，该帮助至关重要</strong></em>。点击它来阅读关于可以进行的损伤计算的类型。尽管它看起来非常复杂，但是在下面的实践中你将学会使用它们进行各种特殊情形的计算。</li><li>下拉DAMAGE 菜单选择“Detailed Calculation with Full Damage Cascades”(详细的计算完全损伤级联)。</li><li>在这个选项框下面是可供选择的基本图像绘制模式。现在我们可以忽视这个选项。我们将会做出各种图像，但我们将在计算按照需要改变它们。</li><li>最后，在窗口中部的最右边接近“Damage（eV）”选项框的边上有另一个帮助选项框。我们可以查看它以了解产生各种特定种类的损伤所需要的不同能量。在深入之前，我们应该了解这些概念:移位能(Displacement energy）、表面结合能（Surface binding energy）和晶格结合能（Lattice binding energy）。</li><li>设置完成，一定要多看看帮助按钮，这个软件的帮助按钮写的十分详细。</li><li>最后，点击“Save Input and Run TRIM”开始计算。</li></ol><h4 id="损伤的TRIM计算结果"><a href="#损伤的TRIM计算结果" class="headerlink" title="损伤的TRIM计算结果"></a>损伤的TRIM计算结果</h4><p>TRIM 计算开始。当 TRIM生成描述你的靶的内部表格需要一段时间(其实很快)。之后你将看到第一个离子的径迹。<br>在离子每产生一个空位（即将一个硅原子撞离它在晶格上的格点位置），离子径迹都会用一个红点来表示，而绿点是由反冲的硅原子产生的空位。</p><p>可以注意到离子总是会造成损伤（红点），而在反冲硅原子产生所谓的反冲级联损伤的位置会有成群的绿色小点。</p><p>每次磷离子猛烈地撞击到个硅原子上，它将转移相当一部分能量给硅原子。<br>由于磷原子和硅原子具有几乎相等的质量，我们可以知道这是正确的。如果离子和靶原子的质量相差很大，那么转移给靶原子的能量就会非常小。这是两个粒子间弹性碰撞的基本物理现象。<br>每次离子和硅之间发生猛烈的碰撞，并产生一条绿色的级联损伤线，离子有很大可能会改变运动方向。由于此时我们只能看到两个坐标轴定义的区间之上的图像，一些三维空间偏转的情况是不可见的。</p><p>几乎每次离子和一个靶原子碰撞，就会有一个空位（一个红点）产生。靶原子随后反冲回来，并且它所有产生空位的碰撞都用绿色小点在图中标出。单个反冲原子最多可以产生 1000 个空位（绿色），而离子只产生一个空位（红色）。</p><p>TRIM Calculation Window（计算窗口)左边的“DISTRIBUTIONS”（分布）的表格中有各种按钮。<br>左边的第一列按钮“？”是每种图像的帮助菜单。<br>第二列“File”按钮在硬盘上生成文档,<em><strong>请勿点击它们</strong></em>。<br>第三列（白色方形框）是用于选取图像。<br>我们将在进行下面的入射选项时用到这些命令。当你点击任意一个按钮后，在对正在进行的离子入射计算完成前有一个停顿，之后命令才会被执行。因而你需要耐心等待。当你查看任意图像时计算会继续进行，并且这些图像会在每个离子入射后被更新。</p><p>最顶端的图像是ION DISTRIBUTION（离子分布）。阅读帮助选项，并熟悉它们(真的很有必要)。现在点击这个选项中的作图选项。一个标题为ION RANGES（离子射程）的图像就会产生。你将会看到磷离子（190keV）在硅靶中的分布。<br>这个“离子射程”大约为 2400-2500A。我们设置了靶厚度大约为 3500A，使得我们在此图像中能够获取大部分的离子。注意坐标单位：“（Atom&#x2F;cm<sup>3</sup>）&#x2F;(Atoms&#x2F;cm<sup>3</sup>)”。尽管这些单位看起来很奇怪，当你乘以一个注入剂量（ions&#x2F;cm<sup>2</sup>）时，你将会最终得到杂质分布（atoms&#x2F;cm<sup>3</sup>）对深度的曲线。这是非常好的！假设你想要一个约为每平方厘米5×10<sup>18</sup>的掺杂峰浓度，试想如果你可以判定这一参量的话，每平方厘米 10<sup>14</sup>个磷原子的注入剂量就足够了。这对于n型井的掺杂将是完美的。</p><blockquote><p>如果你想要一个约为每平方厘米5×10<sup>18</sup>的掺杂峰浓度，那需要多大的磷离子注入剂量呢？</p></blockquote><blockquote><p>注意到这个分布的更高级的参数(straggle 歧离度、skewness 偏斜度、kurtosis 峰度)在图像上面给出。<br>这些都在图像的帮助菜单中简略地进行了讨论。要得到更详细的说明，点击顶部的“Help，FAQ and Scientific Explanations”键，选择“TRIM FAQand Solutions”，然后选择“Statistics of Range Distributions”。阅读它可以理解这些选项使用的不同的统计办法以描述最后的离子分布。<br>另外，关闭射程图窗口（每个打开的图像窗口都会减慢计算速度）。</p></blockquote><p>接下来我们要来关注 Ion&#x2F;Recoil Distribution。点击帮助选项键来获得其内容。</p><p>选择Ion&#x2F;Recoil Distribution图像。注意“Ion”图（红色）和在IonDistribution中展示的图是相同的。<br>绿色的图展示的是反冲硅原子的分布。这些都是被撞击出它们晶格位置产生空位的硅原子。<br>注意到反冲硅原子（绿色）的分布相比磷离子有一个更浅的峰。在磷离子径迹的末端附近，离子不具备足够的能量来产生大量的级联损伤。<br>这两个峰具有相同的大小，因而他们对靶造成的损伤几乎等同。</p><p>这个图像的单位也是“（Atom&#x2F;cm<sup>3</sup>）(Atoms&#x2F;cm<sup>2</sup>)”在反冲硅原子分布的峰附近数值为10<sup>8</sup>。硅原子的密度大约是5×10<sup>22</sup>atoms&#x2F;cm<sup>2</sup>。<br>稍作计算，我们可以得出，在每平方厘米5×10<sup>14</sup>个磷原子的剂量下，在损伤分布峰处平均每个靶原子就会发生一次移位。这表明晶体靶会非晶化，除非在室温下99%的硅晶体损伤会立刻退火导致大部分的损伤会消失。这将在以后进行更详尽的论述。<br>另一张图会帮助你理解这些碰撞的细节。这张名为“Collision Events”的图将会把靶空位数作为深度的函数画出（这张图可通过在 TRIM 计算窗口中点击 Damage Events然后选择Total Vacancies 来生成）。<br>注意在峰位也是大约每个A量级的离子产生一个空位，这和之前反冲分布的数字（10<sup>8</sup>A&#x3D;1cm）不谋而合。</p><h4 id="磷离子是否会产生一个非晶化层"><a href="#磷离子是否会产生一个非晶化层" class="headerlink" title="磷离子是否会产生一个非晶化层"></a>磷离子是否会产生一个非晶化层</h4><p>我们可以估算磷离子是否能产生一个非晶化层。<br>在上面得到的损伤图的峰位处的空位率大约为1空位&#x2F;靶原子。但是我们假设99%的损伤都能立刻退火，只剩下1%的损伤。<br>利用前面计算得到的图像和10<sup>15</sup>ions&#x2F;cm<sup>2</sup>的注入剂量可以得到在每A·cm<sup>2</sup>的体积中可以生成10<sup>13</sup>个稳定的空位。利用10<sup>8</sup>A&#x3D;1cm进行代换，得到空位密度为10<sup>21</sup>&#x2F;cm<sup>3</sup>。硅的密度是5×10<sup>22</sup>&#x2F;cm<sup>3</sup>。计算得到的损伤密度是立方厘米 10<sup>21</sup>个空位。<br>因此硅靶的损伤程度大约为 2%，因而注入层并不是非晶化的。<br>这个结论并不是非常准确，因为硅的移位能（将在以后讨论）在损伤累积时会减小。这意味着只要有局部的损伤，由于晶格之间耦合得更松散，原子更容易离位，而更多的损伤也更容易生成。<br>这些在晶体中整体性的的变化在TRIM中并未被考虑，因而损伤可能被低估了。</p><hr><p>2022.2.6 23:00<br>更新预告：<br>demo2 靶的混合和溅射</p><p>Ps：文章内容主要来自外文翻译，由于博主英文水平有限，难免出现语法错误等，欢迎大家评论区指正。<br>另，由于上传博客时markdown语法插入的图片会失效，故暂不进行插图，日后闲出屁了再考虑完善吧。</p><hr>]]></content>
    
    
    
    <tags>
      
      <tag>SRIM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>洛阳一日游</title>
    <link href="/12309.html"/>
    <url>/12309.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="洛阳一日游简单攻略"><a href="#洛阳一日游简单攻略" class="headerlink" title="洛阳一日游简单攻略"></a>洛阳一日游简单攻略</h1><span id="more"></span><h2 id="龙门石窟"><a href="#龙门石窟" class="headerlink" title="龙门石窟"></a>龙门石窟</h2><p>建议时长：<br>3-4小时<br>门票价格：<br>100元，包括西山石窟、东山石窟、香山寺、白园等</p><p>龙门石窟是印度文化与中国文化相融合的建筑。石窟分为西山和东山两部分，东山石窟多是唐代作品，而西山石窟开凿于北朝、隋唐时期。</p><h2 id="洛阳博物馆"><a href="#洛阳博物馆" class="headerlink" title="洛阳博物馆"></a>洛阳博物馆</h2><p>建议时长：<br>1-2小时<br>门票价格：<br>免费</p><p>从龙门石窟回市区的路上，可以游览洛阳博物馆。洛阳是一座综合性历史博物馆，由主楼和辅楼组成。主楼一层为通展，二楼则是博物馆的精品展。新馆共展出文物1.1万余件。</p><h2 id="白马寺"><a href="#白马寺" class="headerlink" title="白马寺"></a>白马寺</h2><p>建议时长：<br>1-2小时<br>门票价格：<br>35元（不包含解说）</p><p>从博物馆乘77路可前往白马寺。白马寺是佛教传入中国后第一所官办寺院。其分为三个部分，白马寺古寺，东面的齐云塔院以及西面的外国佛寺。白马寺建筑规模宏伟，现布局为明嘉靖时重修，仅存天王殿、大佛殿、大雄殿、接引殿四座大殿，其中大雄宝殿是全寺主殿。</p><h2 id="洛阳老街"><a href="#洛阳老街" class="headerlink" title="洛阳老街"></a>洛阳老街</h2><p>建议时长：<br>不限<br>门票价格：<br>无</p><p>从白马寺回到市区，到洛阳老街。洛阳老街承载着洛阳的记忆，老街西起丽景门，东至鼓楼，中心部分为十字街。老街更多的保持了原始风貌，青石板路，砖房店面。<strong>老街中有很多当地的美食。</strong></p><p>数据参考：<br><a href="http://www.mafengwo.cn/travel-news/1436634.html">马蜂窝-洛阳一日游</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Trip</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>郑州-准备知识</title>
    <link href="/16655.html"/>
    <url>/16655.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="About-郑州"><a href="#About-郑州" class="headerlink" title="About 郑州"></a>About 郑州</h1><h2 id="郑州景点Top5"><a href="#郑州景点Top5" class="headerlink" title="郑州景点Top5"></a>郑州景点Top5</h2><span id="more"></span><h3 id="嵩山"><a href="#嵩山" class="headerlink" title="嵩山"></a>嵩山</h3><p>五岳之一，这里道、佛、儒三教荟萃，是三教合一体现最为完美的地方<br>这里还包含景点：<br>中岳庙 三皇寨 卢崖瀑布风景区 二祖庵 达摩洞 嵩阳书院 药师阁 观音阁 孝贤碑林 大法王寺 六祖坛 少林寺演武厅(入口) 初祖庵(山门) 地质公园标志碑 石英岩脉(嵩山龙鸟) 乾隆御碑 清心潭 落印潭 十方禅院 少林寺站 少林古兵器展览馆</p><p>emm不想爬山的话不考虑  </p><p>门票<br>少林寺景区:80人民币；嵩山(太室山):50人民币；中岳庙:30人民币 (1月1日-12月31日 周一-周日)  </p><p>开放时间<br>07:00-18:30(太室山、少林寺、永泰寺、卢崖瀑布、会善寺)<br>08:00-17:00(中岳庙、嵩阳书院) (1月1日-12月31日 周一-周日)</p><h3 id="河南博物馆"><a href="#河南博物馆" class="headerlink" title="河南博物馆"></a>河南博物馆</h3><p>中国建立较早的博物馆之一，功能齐全，展品丰富，是一个科普知识的好去处。<br><strong>每周二至日，博物馆内会有华夏古乐演出，演出时间分别是11:00和16:00点，每场演出约20分钟。</strong></p><p>门票<br>免费<br>开放时间<br>09:00-17:30(夏令时)<br>09:00-17:00(冬令时)  </p><h3 id="建业·华谊兄弟电影小镇"><a href="#建业·华谊兄弟电影小镇" class="headerlink" title="建业·华谊兄弟电影小镇"></a>建业·华谊兄弟电影小镇</h3><p>建业·华谊兄弟电影小镇是建业集团新蓝海战略的文化力作，坐落于郑州国际文化创意产业园，地处郑汴洛黄金旅游带中心位置，辐射中原城市群核心高地。<br>电影小镇从本土文化出发，从沉浸式电影场景出发，以电影主题演艺为核心，打造集电影互动游乐、电影文化体验、电影主题客栈、民俗和非遗体验等于一体的沉浸式电影潮玩地。  </p><p>门票<br>全价票:100人民币；优惠票:70人民币 (1月1日-12月31日 周一-周日)</p><p>开放时间<br>10:00-22:00；停止入场时间:21:00 (1月1日-12月31日 周一-周日)</p><p>优惠票需要学生证+身份证原件<br>距离戏剧幻城2.6公里</p><h3 id="只有河南·戏剧幻城"><a href="#只有河南·戏剧幻城" class="headerlink" title="只有河南·戏剧幻城"></a>只有河南·戏剧幻城</h3><p>有河南·戏剧幻城是由建业集团携手王潮歌导演共同打造的一座有21个剧场的戏剧幻城，也是中国最大的戏剧聚落群。景区以沉浸式戏剧艺术为手法，以独特的“幻城”建筑为载体，通过讲述关于“土地、粮食、传承”的故事，让更多人感受戏剧文化的魅力。</p><p>门票<br>一日票：全价290元，优惠200元<br>开放时间<br>10:00-20:00 (1月1日-12月31日 周一-周五)<br>10:00-22:00 (1月1日-12月31日 周六-周日)</p><h3 id="始祖山风景区"><a href="#始祖山风景区" class="headerlink" title="始祖山风景区"></a>始祖山风景区</h3><p>免费<br>会爬山+1  </p><h3 id="其他景点"><a href="#其他景点" class="headerlink" title="其他景点"></a>其他景点</h3><p>二七纪念塔<br>CBD玉米楼<br>两座地标性建筑，不想写了。。。</p><h2 id="郑州美食"><a href="#郑州美食" class="headerlink" title="郑州美食"></a>郑州美食</h2><h3 id="烩面"><a href="#烩面" class="headerlink" title="烩面"></a>烩面</h3><p>郑州最具有代表性的美食，特点是汤好面筋，营养高，按配料不通过可以分为：牛&#x2F;羊肉烩面、三鲜烩面等。</p><p><strong>热门店：萧记三鲜烩面、合记烩面、四厂烩面、西三烩面、裕丰源滋补烩面、惠丰源烩面馆。</strong></p><h3 id="烩羊肉"><a href="#烩羊肉" class="headerlink" title="烩羊肉"></a>烩羊肉</h3><p>登封风味小吃，肉味鲜美，肥而不腻。</p><p><strong>热门店：三厂老胡家烩羊肉、刘记羊肉汤、虢国羊肉汤馆、宋老三苏肉羊肉汤</strong></p><h3 id="胡辣汤"><a href="#胡辣汤" class="headerlink" title="胡辣汤"></a>胡辣汤</h3><p>对于郑州人来说，早晨唤醒灵魂的一定是胡辣汤的香味。</p><p><strong>热门店：方中山胡辣汤(顺河路店)、逍遥镇胡辣汤、高老大牛排胡辣汤(嵩山南路249-36)、杨凤花胡辣汤(玉凤路333号)</strong></p><h3 id="其他美食"><a href="#其他美食" class="headerlink" title="其他美食"></a>其他美食</h3><p>焖饼、油馍头、炸酥肉等较为普遍，不赘述。</p><h3 id="美食街区-amp-夜市"><a href="#美食街区-amp-夜市" class="headerlink" title="美食街区&amp;夜市"></a>美食街区&amp;夜市</h3><p>二七广场(六道巷)、德化街、紫荆山、伏牛路、伊河路、顺城街、永安街、布厂街、公园茂、农科路夜市</p><p>信息因疫情可能有较大误差，仅供参考</p><h2 id="交通"><a href="#交通" class="headerlink" title="交通"></a>交通</h2><ul><li>机场：新郑国际机场地铁2号线沿线城郊线直达。</li><li>火车站：郑州站、郑州东站(高铁经停)、郑州西站等</li><li>地铁站：目前已开通地铁1&#x2F;2&#x2F;5&#x2F;14&#x2F;城郊线五条地铁线路，可领取电子卡刷码乘车。</li><li>公交：郑州公交价格在1元左右，运营时间约在6-23点之间，可刷码乘车。</li><li>打车起步价8元。</li></ul><h2 id="住宿"><a href="#住宿" class="headerlink" title="住宿"></a>住宿</h2><p>住宿主要根据自己想去的地方选择。</p><ul><li>如果喜欢热闹&#x2F;爱逛街&#x2F;品尝小吃，可以选择二七广场&#x2F;国贸360&#x2F;中原万达附近，交通便利，美食集中。</li><li>如果比较喜欢自然风景，可以考虑住郑州东站(高铁站)附近，离会展中心&#x2F;绿博园&#x2F;大学城都不远，也有到登封少林寺&#x2F;开封市的车。</li></ul><blockquote><p>2022.02.04 更新分割线  </p></blockquote><hr><p>更新预告：  </p><ol><li>将景点在地图中标注出，讨论确定要去的景点+备用景点。</li><li>将景点周围价格合适的酒店、民宿等整理出一个list。</li><li>大概计算得出预算区间。</li></ol><hr><p>数据参考：<br>[1].<a href="http://www.mafengwo.cn/jd/10794/gonglve.html">马蜂窝-郑州景点概况</a><br>[2].<a href="https://zhuanlan.zhihu.com/p/196726107">知乎-超强郑州旅游攻略</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Trip</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python入门笔记（一）</title>
    <link href="/65174.html"/>
    <url>/65174.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="人生苦短-我用Python"><a href="#人生苦短-我用Python" class="headerlink" title="人生苦短 我用Python"></a>人生苦短 我用Python</h1><span id="more"></span><p>By Paneer</p><p>Python具有强制可读性，通过强制缩进来体现语句之间的逻辑关系  </p><h2 id="Python中基本的输入输出"><a href="#Python中基本的输入输出" class="headerlink" title="Python中基本的输入输出"></a>Python中基本的输入输出</h2><p>统一的运算模式：输入数据、处理数据、输出数据<br>I-P-O Input,Process,Output  </p><h2 id="基本输出函数-print"><a href="#基本输出函数-print" class="headerlink" title="基本输出函数 print()"></a>基本输出函数 print()</h2><p>print()函数简单语法结构为：  </p><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(输出内容)<br></code></pre></td></tr></table></figure><h3 id="print-函数简单输出"><a href="#print-函数简单输出" class="headerlink" title="print()函数简单输出"></a>print()函数简单输出</h3><ul><li>输出内容可以是数字和字符串（字符串要用引号括起来），此内容将会直接输出，也可以是包含运算符的表达式，此类内容将计算结果输出</li><li>如果要一次输出多个内容，则可以用英文半角逗号将所输出的内容分隔开</li></ul><p>示例如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 1.使用print函数简单输出</span><br>a = <span class="hljs-number">10</span>  <span class="hljs-comment"># 变量a赋值为10</span><br>b = <span class="hljs-number">20</span>  <span class="hljs-comment"># 变量b赋值为20</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;hello world&#x27;</span>)  <span class="hljs-comment"># 输出hello world</span><br><span class="hljs-built_in">print</span>(a)  <span class="hljs-comment"># 输出10</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;a&quot;</span>)  <span class="hljs-comment"># 输出a</span><br><span class="hljs-built_in">print</span>(a + b)  <span class="hljs-comment"># 输出30</span><br><br><span class="hljs-comment"># 2.不换行一次输出多个数据</span><br>a = <span class="hljs-number">10</span>  <span class="hljs-comment"># 变量a赋值为10</span><br>b = <span class="hljs-number">20</span>  <span class="hljs-comment"># 变量b赋值为20</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;hello world&#x27;</span>, a, b, a + b)  <span class="hljs-comment"># 输出hello world 10 20 30</span><br><br><span class="hljs-comment"># 3.输出ASCII码所对应的字符</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;b&quot;</span>)  <span class="hljs-comment"># 输出字符b</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-number">98</span>))  <span class="hljs-comment"># 输出字符b</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;C&quot;</span>)  <span class="hljs-comment"># 输出字符C</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">chr</span>(<span class="hljs-number">67</span>))  <span class="hljs-comment"># 输出字符C</span><br><br><span class="hljs-comment"># 4.使用print输出中文</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;北&#x27;</span>))  <span class="hljs-comment"># 得到&quot;北&quot;的编码为21271（十进制），转为十六进制为：5317</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;京&#x27;</span>))  <span class="hljs-comment"># 得到&quot;京&quot;的编码为20140（十进制），转为十六进制为：4eac</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\u5317\u4eac&#x27;</span>)  <span class="hljs-comment"># 输出&quot;北京&quot;</span><br><br><span class="hljs-comment"># 5.使用print函数将内容输出到文件中</span><br>fp = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;demo.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>)  <span class="hljs-comment"># 打开文件demo.txt（若无则新建） w--&gt;write</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;hello world&#x27;</span>, file=fp)  <span class="hljs-comment"># 输出&quot;hello world&quot;到文件中</span><br>fp.close()  <span class="hljs-comment"># 关闭文件</span><br></code></pre></td></tr></table></figure><h3 id="print-函数复杂输出"><a href="#print-函数复杂输出" class="headerlink" title="print()函数复杂输出"></a>print()函数复杂输出</h3><p>print()函数完整语法结构为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(value,...,sep=<span class="hljs-string">&#x27; &#x27;</span>,end=<span class="hljs-string">&#x27;\n&#x27;</span>,file=<span class="hljs-literal">None</span>)<br></code></pre></td></tr></table></figure><blockquote><p>在pycharm中按住Ctrl键鼠标点击print()方可看到</p></blockquote><ul><li>多条print()输出到一行显示<ul><li>只需将end设置为其他字符，例如end&#x3D;’ ‘</li></ul></li><li>使用链接符连接多个字符串<ul><li>使用“+”连接数值和其他数据类型时，系统默认为加法计算，程序报错。可将数值作为字符串来处理。</li></ul></li></ul><p>示例如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 6.多条print输出到一行显示</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;大头&#x27;</span>, end=<span class="hljs-string">&#x27;---&gt;&#x27;</span>)  <span class="hljs-comment"># 输出&quot;大头&quot;，并将end中&#x27;\n&#x27;替换为&#x27;---&gt;&#x27;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;真可爱&#x27;</span>)  <span class="hljs-comment"># 输出&quot;真可爱&quot;，同时运行这两行会得到&quot;大头---&gt;真可爱&quot;</span><br><br><span class="hljs-comment"># 7.使用连接符连接多个字符串</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">1234</span>)  <span class="hljs-comment"># 直接输出整数</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">3.1415926</span>)  <span class="hljs-comment"># 直接输出浮点数</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>)  <span class="hljs-comment"># 逗号连接，直接输出并用空格连接</span><br><span class="hljs-built_in">print</span>(<span class="hljs-number">192</span>, <span class="hljs-number">168</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, sep=<span class="hljs-string">&#x27;.&#x27;</span>)  <span class="hljs-comment"># 使用间隔符&quot;.&quot;进行连接,数值之间用&quot;.&quot;进行分割</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;今年是&#x27;</span> + <span class="hljs-string">&#x27;2022&#x27;</span> + <span class="hljs-string">&#x27;年&#x27;</span>)  <span class="hljs-comment"># 输出为&quot;今年是2022年&quot;</span><br></code></pre></td></tr></table></figure><h2 id="基本输入函数input"><a href="#基本输入函数input" class="headerlink" title="基本输入函数input()"></a>基本输入函数input()</h2><p>input()简单语法结构为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">variable = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;提示文字&#x27;</span>)<br></code></pre></td></tr></table></figure><ul><li>无论用户输入的是字符或数字，input()函数统一按照字符串类型输出</li><li>要想接收整型的数字并保存到变量num中，代码如下<br><code>num=int(input(&#39;请输入你的幸运数字： &#39;))</code></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 8.input函数的使用</span><br>name = <span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入你的姓名：&#x27;</span>)  <span class="hljs-comment"># 输入的字符串赋值于name中</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;您的姓名是：&#x27;</span> + name)  <span class="hljs-comment"># 输出&quot;您的姓名是：name(指其值)&quot;</span><br><br><span class="hljs-comment"># 9.输入整数类型的数据</span><br>num = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入您的幸运数字：&#x27;</span>))  <span class="hljs-comment"># 将输入的字符串转换为int型</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;您的幸运数字为：&#x27;</span>,num)  <span class="hljs-comment"># 此处不能用&quot;+&quot;进行连接，num此时为整数类型，加号会默认运算</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown语法速查表</title>
    <link href="/43418.html"/>
    <url>/43418.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="markdown语法速查"><a href="#markdown语法速查" class="headerlink" title="markdown语法速查"></a>markdown语法速查</h1><span id="more"></span><p>By Paneer</p><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><div class="code-wrapper"><pre><code class="hljs"># H1      % 一级标题</code></pre></div><h1 id="H1"><a href="#H1" class="headerlink" title="H1"></a>H1</h1><div class="code-wrapper"><pre><code class="hljs">## H2     % 二级标题</code></pre></div><h2 id="H2"><a href="#H2" class="headerlink" title="H2"></a>H2</h2><p>……</p><div class="code-wrapper"><pre><code class="hljs">###### H6 % 六级标题</code></pre></div><h6 id="H6"><a href="#H6" class="headerlink" title="H6"></a>H6</h6><h3 id="换行与段落"><a href="#换行与段落" class="headerlink" title="换行与段落"></a>换行与段落</h3><p>在markdown中切换段落可以通过连续两个回车来解决，（此处回车 1）<br>（此处回车 1）<br>换行则是在上一句的句末多加两个空格之后（此处空格 2）<br>进行单次回车进行换行操作</p><h3 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a><strong>粗体</strong></h3><div class="code-wrapper"><pre><code class="hljs">**bold text**</code></pre></div><h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a><em>斜体</em></h3><div class="code-wrapper"><pre><code class="hljs">*italicized text*</code></pre></div><p><em><strong>粗+斜体</strong></em></p><div class="code-wrapper"><pre><code class="hljs">***bold &amp; italic***</code></pre></div><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><blockquote><p>引用块</p><blockquote><p>以及嵌套引用</p></blockquote></blockquote><div class="code-wrapper"><pre><code class="hljs">&gt;引用文字&gt;&gt;嵌套引用</code></pre></div><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><ol><li>first item</li><li>second item</li><li>third item</li></ol><p>%</p><div class="code-wrapper"><pre><code class="hljs">1.first item2.second item3.third item</code></pre></div><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><ul><li>item</li><li>item</li><li>item</li></ul><p>%</p><div class="code-wrapper"><pre><code class="hljs">- item- item- item</code></pre></div><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a><code>代码</code></h3><div class="code-wrapper"><pre><code class="hljs">`code`</code></pre></div><p>另，代码块应在每一行之前至少加四个空格即一个TAB制表符</p><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><hr><div class="code-wrapper"><pre><code class="hljs">---</code></pre></div><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a><a href="paneersblog.github.io">链接</a></h3><div class="code-wrapper"><pre><code class="hljs">[链接](paneersblog.github.io)</code></pre></div><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><div class="code-wrapper"><pre><code class="hljs">![图片](image.jpg) % 可以在markdown编辑器中预览但不能上传到hexo博客</code></pre></div><p>若要上传至hexo平台，以Emily上传的图片为例</p><p><a href="paneersblog.github.io"><img src="/43418/%E6%88%91%E4%BB%AC%E6%8E%A5%E5%90%BB%E5%90%A7%E6%88%91%E4%BB%AC%E4%B8%8D%E6%81%8B%E7%88%B1.jpg" class="" title="我们接吻吧我们不恋爱"></a></p><p>且此时在本地同一文件夹下应有一个与 示例.md 文件同名的文件夹 示例 其中储存有该图片</p><div class="code-wrapper"><pre><code class="hljs">&#123;% asset_img 我们接吻吧我们不恋爱.jpg 我们接吻吧我们不恋爱 %&#125; %本地无法预览但能上传到hexo博客</code></pre></div><h2 id="扩展语法"><a href="#扩展语法" class="headerlink" title="扩展语法"></a>扩展语法</h2><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><table><thead><tr><th align="left">左对齐</th><th align="center">居中</th><th align="right">右对齐</th></tr></thead><tbody><tr><td align="left">1</td><td align="center">2</td><td align="right">3</td></tr><tr><td align="left">text</td><td align="center">text</td><td align="right">text</td></tr></tbody></table><div class="code-wrapper"><pre><code class="hljs">| 左对齐 |  居中  | 右对齐 || :---  | :---: |  ---: || 1 | 2 | 3 || text | text | text |</code></pre></div><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hello world&quot;</span>)<br></code></pre></td></tr></table></figure><div class="code-wrapper"><pre><code class="hljs">% ```python% print(&quot;hello world&quot;)% ```</code></pre></div><h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><p>Here is a sentence with a footnote.<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="This is the footnote.">[1]</span></a></sup>  </p><div class="code-wrapper"><pre><code class="hljs">% Here is a sentence with a footnote.[^ 1]  % [^ 1]: This is footnote.% 注：去掉^和数字1之间的空格</code></pre></div><h3 id="定义列表-并非所有的编辑器都支持"><a href="#定义列表-并非所有的编辑器都支持" class="headerlink" title="定义列表(并非所有的编辑器都支持)"></a>定义列表(并非所有的编辑器都支持)</h3><dl><dt>一个术语</dt><dd>该术语的解释</dd></dl><div class="code-wrapper"><pre><code class="hljs">一个术语: 该术语的解释</code></pre></div><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a><del>删除线</del></h3><div class="code-wrapper"><pre><code class="hljs">~~删除线~~</code></pre></div><h3 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h3><ul><li><input checked="" disabled="" type="checkbox"> write the note</li><li><input disabled="" type="checkbox"> go to bed earlier</li><li><input disabled="" type="checkbox"> wake up earlier</li></ul><p>%</p><div class="code-wrapper"><pre><code class="hljs">- [x] write the note- [ ] go to bed earlier- [ ] wake up earlier</code></pre></div><h3 id="上标和下标"><a href="#上标和下标" class="headerlink" title="上标和下标"></a>上标和下标</h3><p>a<sub>1</sub><sup>2</sup>+b<sub>1</sub><sup>2</sup>&#x3D;c<sub>1</sub><sup>2</sup></p><div class="code-wrapper"><pre><code class="hljs">上标与下标可以使用html中的标签，即&lt;sub&gt;表示下标，&lt;sup&gt;表示上标。  另外，由于markdown语法与html标签是可以共用的，所以说当你在markdown中实现不了的时候不妨试一下html标签。  a&lt;sub&gt;1&lt;/sub&gt;&lt;sup&gt;2&lt;/sup&gt;+b&lt;sub&gt;1&lt;/sub&gt;&lt;sup&gt;2&lt;/sup&gt;=c&lt;sub&gt;1&lt;/sub&gt;&lt;sup&gt;2&lt;/sup&gt;</code></pre></div><h3 id="数学公式块-会居中显示，可多行"><a href="#数学公式块-会居中显示，可多行" class="headerlink" title="数学公式块(会居中显示，可多行)"></a>数学公式块(会居中显示，可多行)</h3><p>$$<br>i&#x3D;\sqrt{-1}<br>$$</p><div class="code-wrapper"><pre><code class="hljs">$$i=\sqrt&#123;-1&#125;$$</code></pre></div><h3 id="插入数学公式"><a href="#插入数学公式" class="headerlink" title="插入数学公式"></a>插入数学公式</h3><p>$i&#x3D;\sqrt{-1}$</p><div class="code-wrapper"><pre><code class="hljs">$i=\sqrt&#123;-1&#125;$</code></pre></div><p>That is all…<br>对于markdown语法，多用多写两篇笔记就记住了，标记式语言很简单</p><p>参考链接：<a href="https://markdown.com.cn/">Markdown官方教程</a></p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>This is the footnote.<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    
    <tags>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我们接吻吧 我们不恋爱</title>
    <link href="/24896.html"/>
    <url>/24896.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><a href="paneersblog.github.io"><img src="/24896/%E6%88%91%E4%BB%AC%E6%8E%A5%E5%90%BB%E5%90%A7%E6%88%91%E4%BB%AC%E4%B8%8D%E6%81%8B%E7%88%B1.jpg" class="" title="我们接吻吧我们不恋爱"></a></p><h2 id="我们接吻吧-我们不恋爱"><a href="#我们接吻吧-我们不恋爱" class="headerlink" title="我们接吻吧 我们不恋爱"></a>我们接吻吧 我们不恋爱</h2><span id="more"></span><p>By Emily</p>]]></content>
    
    
    
    <tags>
      
      <tag>Photo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的Matlab入门笔记</title>
    <link href="/19643.html"/>
    <url>/19643.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h1 id="我的Matlab入门笔记"><a href="#我的Matlab入门笔记" class="headerlink" title="我的Matlab入门笔记"></a>我的Matlab入门笔记</h1><span id="more"></span><p>By Paneer</p><h2 id="关于注释"><a href="#关于注释" class="headerlink" title="关于注释"></a>关于注释</h2><figure class="highlight matlab"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">%% 这是一行注释（双百分号）</span><br><span class="hljs-comment">% 这也是一行注释（单百分号）</span><br></code></pre></td></tr></table></figure><h2 id="关于变量命名"><a href="#关于变量命名" class="headerlink" title="关于变量命名"></a>关于变量命名</h2><p>% 变量名不能超过63个字符</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">datou = <span class="hljs-string">&#x27;keai&#x27;</span> <span class="hljs-comment">% &#x27; &#x27;之间为字符串，定义datou为keai</span><br></code></pre></td></tr></table></figure><p>% 定义矩阵A 空格或逗号隔开，分号换行</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs matlab">A=[<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span>;<span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span>;<span class="hljs-number">4</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span>] <br><br>     A =<br><br>          <span class="hljs-number">1</span>     <span class="hljs-number">2</span>     <span class="hljs-number">3</span><br>          <span class="hljs-number">3</span>     <span class="hljs-number">3</span>     <span class="hljs-number">3</span><br>          <span class="hljs-number">4</span>     <span class="hljs-number">1</span>     <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>% 对矩阵A转置</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs matlab">B=A&#x27;<br><br>     B =<br><br>          <span class="hljs-number">1</span>     <span class="hljs-number">3</span>     <span class="hljs-number">4</span><br>          <span class="hljs-number">2</span>     <span class="hljs-number">3</span>     <span class="hljs-number">1</span><br>          <span class="hljs-number">3</span>     <span class="hljs-number">3</span>     <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>% 将矩阵A按列拉长</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs matlab">C=A(:)<br><br>     C =<br><br>          <span class="hljs-number">1</span><br>          <span class="hljs-number">3</span><br>          <span class="hljs-number">4</span><br>          <span class="hljs-number">2</span><br>          <span class="hljs-number">3</span><br>          <span class="hljs-number">1</span><br>          <span class="hljs-number">3</span><br>          <span class="hljs-number">3</span><br>          <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>% 对矩阵A求逆</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs matlab">D=inv(A)<br><br>     D =<br><br>     <span class="hljs-number">-0.0000</span>   <span class="hljs-number">-0.1111</span>    <span class="hljs-number">0.3333</span><br>     <span class="hljs-number">-1.0000</span>    <span class="hljs-number">1.2222</span>   <span class="hljs-number">-0.6667</span><br>     <span class="hljs-number">1.0000</span>   <span class="hljs-number">-0.7778</span>    <span class="hljs-number">0.3333</span><br></code></pre></td></tr></table></figure><p>% 矩阵之间的乘法运算</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs matlab">A*D<br><br>     <span class="hljs-built_in">ans</span> =<br><br>     <span class="hljs-number">1.0000</span>         <span class="hljs-number">0</span>   <span class="hljs-number">-0.0000</span><br>          <span class="hljs-number">0</span>    <span class="hljs-number">1.0000</span>         <span class="hljs-number">0</span><br>          <span class="hljs-number">0</span>    <span class="hljs-number">0.0000</span>    <span class="hljs-number">1.0000</span><br></code></pre></td></tr></table></figure><h2 id="随机数部分"><a href="#随机数部分" class="headerlink" title="随机数部分"></a>随机数部分</h2><p>% 生成伪随机数，分布在（0-1）之间</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-built_in">rand</span><br></code></pre></td></tr></table></figure><p>% 生成m行n列的均匀分布的伪随机数</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-built_in">rand</span>(m.n)<br></code></pre></td></tr></table></figure><p>% 生成指定精度的均匀分布的伪随机数，参数还可为’single’</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-built_in">rand</span>(m,n,<span class="hljs-string">&#x27;double&#x27;</span>) <br></code></pre></td></tr></table></figure><p>% 利用指定的 RandStream（随机种子）生成伪随机数</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-built_in">rand</span>(RandStream,m,n) <br></code></pre></td></tr></table></figure><p>% 生成标准正态分布的伪随机数（均值为0，方差为1）</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-built_in">randn</span> <span class="hljs-comment">% 主要语法同 rand</span><br></code></pre></td></tr></table></figure><p>% 生成均匀分布的伪随机数</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">randi(n) <br></code></pre></td></tr></table></figure><p>% 在开区间（1，iMax）生成均匀分布的伪随机数</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">r=randi(iMax)<br></code></pre></td></tr></table></figure><p>% 在开区间（1，iMax）生成m*n型随机矩阵</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">r=randi(iMax,m,n)<br></code></pre></td></tr></table></figure><p>% 在开区间（iMin，iMax）生成m*n型随机矩阵</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">r=randi([iMin,iMax],m,n)<br></code></pre></td></tr></table></figure><h2 id="元胞数组"><a href="#元胞数组" class="headerlink" title="元胞数组"></a>元胞数组</h2><p>%% 元胞数组：Matlab中特有的一种数据类型，数组的一种。<br>% 其内部元素可以是属于不同的数据类型。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">A = cell(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>)<br></code></pre></td></tr></table></figure><p>在Matlab中输出为</p><div class="code-wrapper"><pre><code class="hljs"> A = 1×6 cell 数组 列 1 至 3 &#123;0×0 double&#125;    &#123;0×0 double&#125;    &#123;0×0 double&#125; 列 4 至 6 &#123;0×0 double&#125;    &#123;0×0 double&#125;    &#123;0×0 double&#125;</code></pre></div><p>% matlab索引从1开始，此处为第二个元胞为3x3型</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">A&#123;<span class="hljs-number">2</span>&#125; = <span class="hljs-built_in">eye</span>(<span class="hljs-number">3</span>)<br></code></pre></td></tr></table></figure><p>% 输出为<br>     A &#x3D;</p><div class="code-wrapper"><pre><code class="hljs"> 1×6 cell 数组 列 1 至 3 &#123;0×0 double&#125;    &#123;3×3 double&#125;    &#123;0×0 double&#125; 列 4 至 6 &#123;0×0 double&#125;    &#123;0×0 double&#125;    &#123;0×0 double&#125;</code></pre></div><p>%% 在Matlab中生成n阶幻方:</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-built_in">magic</span>(n)<br></code></pre></td></tr></table></figure><p>% 幻方：三阶幻方为例，指1-9九个数字组成3*3的矩阵使得该矩阵任意横竖斜方向三个数的和总是相同。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">A&#123;<span class="hljs-number">5</span>&#125; = <span class="hljs-built_in">magic</span>(<span class="hljs-number">5</span>)<br></code></pre></td></tr></table></figure><p>% 输出为</p><div class="code-wrapper"><pre><code class="hljs"> A = 1×6 cell 数组 列 1 至 3 &#123;0×0 double&#125;    &#123;3×3 double&#125;    &#123;0×0 double&#125; 列 4 至 6 &#123;0×0 double&#125;    &#123;5×5 double&#125;    &#123;0×0 double&#125;</code></pre></div><h2 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">books = struct(<span class="hljs-string">&#x27;name&#x27;</span>,&#123;&#123;<span class="hljs-string">&#x27;Machine Learning&#x27;</span>,<span class="hljs-string">&#x27;Date Mining&#x27;</span>&#125;&#125;,<span class="hljs-string">&#x27;price&#x27;</span>,[<span class="hljs-number">30</span> <span class="hljs-number">40</span>])<br></code></pre></td></tr></table></figure><p>% 可以理解为python中的字典</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs matlab">books.name <span class="hljs-comment">%调用books中name这一属性</span><br>books.name(<span class="hljs-number">1</span>) <span class="hljs-comment">%调用books中第一个name的cell</span><br>books.name&#123;<span class="hljs-number">1</span>&#125; <span class="hljs-comment">%调用books中第一个name的字符串</span><br></code></pre></td></tr></table></figure><h2 id="Matlab矩阵操作"><a href="#Matlab矩阵操作" class="headerlink" title="Matlab矩阵操作"></a>Matlab矩阵操作</h2><h3 id="1-矩阵的定义与构造"><a href="#1-矩阵的定义与构造" class="headerlink" title="1.矩阵的定义与构造"></a>1.矩阵的定义与构造</h3><p>% 构造一个一行六列的矩阵</p><div class="code-wrapper"><pre><code class="hljs"> A = [1 2 3 4 5 6]</code></pre></div><p>% 构造1-9区间内步长为3的矩阵即：B &#x3D; 1 4 7</p><div class="code-wrapper"><pre><code class="hljs"> B = 1:3:9</code></pre></div><p>%将B矩阵重复，化为3行1列的分块矩阵C，每一块都是矩阵B</p><div class="code-wrapper"><pre><code class="hljs"> C = repmat(B,3,1)</code></pre></div><p>% 生成一个2行4列的每个值都是1的矩阵</p><div class="code-wrapper"><pre><code class="hljs"> D = ones(2,4)</code></pre></div><h3 id="2-矩阵的四则运算"><a href="#2-矩阵的四则运算" class="headerlink" title="2.矩阵的四则运算"></a>2.矩阵的四则运算</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs matlab">A = [<span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span>; <span class="hljs-number">5</span> <span class="hljs-number">6</span> <span class="hljs-number">7</span> <span class="hljs-number">8</span>]<br>B = [<span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span>; <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span>]<br>C = A + B<br>D = A - B<br>E = A * B&#x27; <span class="hljs-comment">% A矩阵与B矩阵的转置相乘</span><br>F = A .* B <span class="hljs-comment">% A矩阵与B矩阵所对应的项相乘</span><br>G = A / B  <span class="hljs-comment">% G * B = A 即 G = A * inv(B) （B的逆）</span><br>H = A ./ B <span class="hljs-comment">% A矩阵与B的逆矩阵对应项相乘</span><br></code></pre></td></tr></table></figure><h3 id="3-矩阵的下标"><a href="#3-矩阵的下标" class="headerlink" title="3.矩阵的下标"></a>3.矩阵的下标</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs matlab">A = <span class="hljs-built_in">magic</span>(<span class="hljs-number">5</span>) <span class="hljs-comment">% 生成5阶幻方</span><br>B = A(<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)   <span class="hljs-comment">% 将矩阵A的第二列第三行元素赋值给B</span><br>C = A(<span class="hljs-number">3</span>,:)   <span class="hljs-comment">% 将矩阵A的第三行赋值给C</span><br>D = A(:,<span class="hljs-number">4</span>)   <span class="hljs-comment">% 将矩阵A的第四列赋值给D</span><br>[m, n] = <span class="hljs-built_in">find</span>(A &gt; <span class="hljs-number">20</span>) <span class="hljs-comment">% 寻找A中大于20的值，并将其行数列数分别赋值给 m、n</span><br></code></pre></td></tr></table></figure><h2 id="程序结构"><a href="#程序结构" class="headerlink" title="程序结构"></a>程序结构</h2><h3 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h3><h4 id="for循环：步长默认为1，可省略。其余符合数学逻辑即可"><a href="#for循环：步长默认为1，可省略。其余符合数学逻辑即可" class="headerlink" title="for循环：步长默认为1，可省略。其余符合数学逻辑即可"></a>for循环：步长默认为1，可省略。其余符合数学逻辑即可</h4><div class="code-wrapper"><pre><code class="hljs">% for 循环变量 = 初值：步长：终值     % 执行语句 1     % ……     % 执行语句 n% end</code></pre></div><p>示例：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs matlab">sum = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> n = <span class="hljs-number">1</span>:<span class="hljs-number">5</span><br>sum = sum + n^<span class="hljs-number">2</span><br><span class="hljs-keyword">end</span> <span class="hljs-comment">% 输出得sum为55</span><br></code></pre></td></tr></table></figure><p>% for循环求i!的累加，i&#x3D;1:5</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs matlab">sum = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> =<span class="hljs-number">1</span>:<span class="hljs-number">5</span>;<br>     p=<span class="hljs-number">1</span>;<br>     <span class="hljs-keyword">for</span> <span class="hljs-built_in">j</span> = <span class="hljs-number">1</span>:<span class="hljs-built_in">i</span>;<br>          p = p*<span class="hljs-built_in">j</span>;<br>     <span class="hljs-keyword">end</span><br>     sum =sum+p;<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h4 id="while循环-当表达式为真时进入循环，为假时执行end之后的语句"><a href="#while循环-当表达式为真时进入循环，为假时执行end之后的语句" class="headerlink" title="while循环 当表达式为真时进入循环，为假时执行end之后的语句"></a>while循环 当表达式为真时进入循环，为假时执行end之后的语句</h4><div class="code-wrapper"><pre><code class="hljs"> % while 条件表达式 %    执行语句1 %    ... %    执行语句n % end</code></pre></div><p>% 求1+2+3+4+5+…+10的和</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs matlab">s = <span class="hljs-number">0</span>;<br>n = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">while</span> n&lt;=<span class="hljs-number">10</span><br>     s = s+n;<br>     n = n+<span class="hljs-number">1</span>;<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h3><h4 id="1-if…end-结构"><a href="#1-if…end-结构" class="headerlink" title="1. if…end 结构"></a>1. if…end 结构</h4><p>% 该结构只有一个判断语句，当条件表达式为真时，执行该语句；反之执行end后的语句</p><div class="code-wrapper"><pre><code class="hljs"> % if 条件表达式 %    ... %   语句体 %    ... % end</code></pre></div><p>% 满足条件时显示”成立”</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs matlab">a = <span class="hljs-number">100</span>;<br>b = <span class="hljs-number">10</span>;<br><span class="hljs-keyword">if</span> a&gt;b<br>     <span class="hljs-string">&#x27;成立&#x27;</span><br><span class="hljs-keyword">end</span> <span class="hljs-comment">% 输出ans = 成立</span><br></code></pre></td></tr></table></figure><h4 id="2-if…else…end结构"><a href="#2-if…else…end结构" class="headerlink" title="2.if…else…end结构"></a>2.if…else…end结构</h4><p>% 若表达式为真，则执行语句体1，否则执行语句体2</p><div class="code-wrapper"><pre><code class="hljs"> % if 表达式 %       语句体1 %   else %       语句体2 % end</code></pre></div><h4 id="3-switch…case…end结构"><a href="#3-switch…case…end结构" class="headerlink" title="3.switch…case…end结构"></a>3.switch…case…end结构</h4><p>% switch后表达式的值或字符串与case后的值或字符串进行比较，与哪一个case相同则执行哪一个case下的语句体。</p><p>% 若所有的case的值都不相同，则执行otherwise后的语句体。</p><div class="code-wrapper"><pre><code class="hljs"> % switch 表达式（数值or字符串） %       case 数值或字符串1 %           语句体1; %       case 数值或字符串2 %           语句体2; %       ... %       otherwise %           语句体n； % end</code></pre></div><h2 id="二维平面绘图"><a href="#二维平面绘图" class="headerlink" title="二维平面绘图"></a>二维平面绘图</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs matlab">x = <span class="hljs-number">0</span>:<span class="hljs-number">0.01</span>:<span class="hljs-number">2</span>*<span class="hljs-built_in">pi</span>;<br>y = <span class="hljs-built_in">sin</span>(x);<br><span class="hljs-built_in">figure</span>             <span class="hljs-comment">% 建立一个幕布，有时可省略</span><br><span class="hljs-built_in">plot</span>(x,y)          <span class="hljs-comment">% 画图命令</span><br>title(<span class="hljs-string">&#x27;y=sin(x)&#x27;</span>)  <span class="hljs-comment">% 图像标题</span><br>xlabel(<span class="hljs-string">&#x27;x&#x27;</span>)        <span class="hljs-comment">% x轴标题</span><br>ylabel(<span class="hljs-string">&#x27;sin(x)&#x27;</span>)   <span class="hljs-comment">% y轴标题</span><br>xlim([<span class="hljs-number">0</span> <span class="hljs-number">2</span>*<span class="hljs-built_in">pi</span>])     <span class="hljs-comment">% Matlab默认会另x范围增大，加上此语句可避免</span><br></code></pre></td></tr></table></figure><p>% 颜色选项参数  </p><table><thead><tr><th align="center">红</th><th align="center">绿</th><th align="center">蓝</th><th align="center">黄</th><th align="center">粉</th><th align="center">青</th><th align="center">白</th><th align="center">黑</th></tr></thead><tbody><tr><td align="center">r</td><td align="center">g</td><td align="center">b</td><td align="center">y</td><td align="center">m</td><td align="center">c</td><td align="center">w</td><td align="center">k</td></tr></tbody></table><p>% 线性选项参数  </p><table><thead><tr><th align="center">实线</th><th align="center">虚线</th><th align="center">冒号线</th><th align="center">点画线</th></tr></thead><tbody><tr><td align="center">-</td><td align="center">–</td><td align="center">：</td><td align="center">-。</td></tr><tr><td align="center">———————————</td><td align="center">———–</td><td align="center">··· ··· ···</td><td align="center">-·-·-·-·-·-</td></tr></tbody></table><p>% 数据标记点选项参数  </p><table><thead><tr><th align="center">点</th><th align="center">十字号</th><th align="center">圆圈</th><th align="center">星号</th><th align="center">叉号</th><th align="center">正方形</th><th align="center">菱形</th><th align="center">上三角</th><th align="center">下三角</th><th align="center">左三角</th></tr></thead><tbody><tr><td align="center">·</td><td align="center">+</td><td align="center">o</td><td align="center">*</td><td align="center">x</td><td align="center">s</td><td align="center">d</td><td align="center">^</td><td align="center">v</td><td align="center">&lt;</td></tr></tbody></table><p>% 例子  </p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs matlab">x = <span class="hljs-number">0</span>:<span class="hljs-number">0.01</span>:<span class="hljs-number">20</span>;<br>y1 = <span class="hljs-number">200</span>*<span class="hljs-built_in">exp</span>(<span class="hljs-number">-0.05</span>*x).*<span class="hljs-built_in">sin</span>(x);<br>y2 = <span class="hljs-number">0.8</span>*<span class="hljs-built_in">exp</span>(<span class="hljs-number">-0.5</span>*x).*<span class="hljs-built_in">sin</span>(<span class="hljs-number">10</span>*x);<br><span class="hljs-built_in">figure</span><br>[AX,H1,H2] = plotyy(x,y1,x,y2,<span class="hljs-string">&#x27;plot&#x27;</span>);<br>set(get(AX(<span class="hljs-number">1</span>),<span class="hljs-string">&#x27;ylabel&#x27;</span>),<span class="hljs-string">&#x27;string&#x27;</span>,<span class="hljs-string">&#x27;Slow Decay&#x27;</span>) <span class="hljs-comment">% y1轴命名</span><br>set(get(AX(<span class="hljs-number">2</span>),<span class="hljs-string">&#x27;ylabel&#x27;</span>),<span class="hljs-string">&#x27;string&#x27;</span>,<span class="hljs-string">&#x27;Fast Decay&#x27;</span>) <span class="hljs-comment">% y2轴命名</span><br>xlabel(<span class="hljs-string">&#x27;Time(\musec)&#x27;</span>)                         <span class="hljs-comment">% X轴命名</span><br>title(<span class="hljs-string">&#x27;Multiple Decay Rates&#x27;</span>)<br>set(H1,<span class="hljs-string">&#x27;linestyle&#x27;</span>,<span class="hljs-string">&#x27;--&#x27;</span>)                       <span class="hljs-comment">% 设置y1的线型</span><br>set(H2,<span class="hljs-string">&#x27;linestyle&#x27;</span>,<span class="hljs-string">&#x27;-.&#x27;</span>)                       <span class="hljs-comment">% 设置y2的线型</span><br></code></pre></td></tr></table></figure><h2 id="三维平面绘图"><a href="#三维平面绘图" class="headerlink" title="三维平面绘图"></a>三维平面绘图</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs matlab">t = <span class="hljs-number">0</span>:<span class="hljs-built_in">pi</span>/<span class="hljs-number">50</span>:<span class="hljs-number">10</span>*<span class="hljs-built_in">pi</span><br><span class="hljs-built_in">plot3</span>(<span class="hljs-built_in">sin</span>(t),<span class="hljs-built_in">cos</span>(t),t)  <span class="hljs-comment">% 三维绘图使用plot3，二维为plot</span><br>xlabel(<span class="hljs-string">&#x27;sin(t)&#x27;</span>)<br>ylabel(<span class="hljs-string">&#x27;cos(t)&#x27;</span>)<br>zlabel(<span class="hljs-string">&#x27;t&#x27;</span>)<br><span class="hljs-comment">% hold on               % 在同一张幕布下保持住，继续添加其他图像，hold off则是不保存清除幕布进行绘制</span><br>grid on                 <span class="hljs-comment">% 在绘制的幕布中添加网格线</span><br>axis square             <span class="hljs-comment">% 将幕布的坐标变为一个正方形，美化图像</span><br></code></pre></td></tr></table></figure><p>%% 图形窗口分割  </p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs matlab">x = <span class="hljs-built_in">linspace</span>(<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-built_in">pi</span>,<span class="hljs-number">60</span>) <span class="hljs-comment">% 定义一个x</span><br>subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>)          <span class="hljs-comment">% 将画布分为两行两列四块，在第1块上绘图</span><br><span class="hljs-built_in">plot</span>(x,<span class="hljs-built_in">sin</span>(x)<span class="hljs-number">-1</span>);<br>title(<span class="hljs-string">&#x27;sin(x)-1&#x27;</span>);<br>axis([<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-built_in">pi</span>,<span class="hljs-number">-2</span>,<span class="hljs-number">0</span>])     <span class="hljs-comment">% 规定范围</span><br>subplot(<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>)          <span class="hljs-comment">% 将画布分为两行一列两块，在第2块上绘图</span><br><span class="hljs-built_in">plot</span>(x,<span class="hljs-built_in">cos</span>(x)+<span class="hljs-number">1</span>);<br>title(<span class="hljs-string">&#x27;cos(x)+1&#x27;</span>);<br>axis([<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-built_in">pi</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>])<br>subplot(<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">3</span>)          <span class="hljs-comment">% 将画布分为四行四列16块，在第3块上绘图</span><br><span class="hljs-built_in">plot</span>(x,<span class="hljs-built_in">tan</span>(x));<br>title(<span class="hljs-string">&#x27;tan(x)&#x27;</span>);<br>axis([<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-built_in">pi</span>,<span class="hljs-number">-40</span>,<span class="hljs-number">40</span>])<br>subplot(<span class="hljs-number">4</span>,<span class="hljs-number">4</span>,<span class="hljs-number">8</span>)          <span class="hljs-comment">% 将画布分为四行四列16块，在第8块上绘图</span><br><span class="hljs-built_in">plot</span>(x,<span class="hljs-built_in">cot</span>(x));<br>title(<span class="hljs-string">&#x27;cot(x)&#x27;</span>);<br>axis([<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-built_in">pi</span>,<span class="hljs-number">-35</span>,<span class="hljs-number">35</span>])<br></code></pre></td></tr></table></figure><p>%% 完结撒花</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">% peaks &amp; mesh</span><br>[x,y,z] = peaks(<span class="hljs-number">40</span>)<br>mesh(x,y,z)<br>grid<br></code></pre></td></tr></table></figure><img src="Matlab/peaks.png"><hr><p><a href="paneersblog.github.io"><img src="/19643/peaks.png" class="" title="peaks"></a></p><p>参考视频地址：<br><a href="https://www.bilibili.com/video/BV13D4y1Q7RS?p=15&amp;share_source=copy_web">https://www.bilibili.com/video/BV13D4y1Q7RS?p=15&amp;share_source=copy_web</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Matlab</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>myfirstBlog</title>
    <link href="/14595.html"/>
    <url>/14595.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>test.<br>Hello world!<br>这是我的第一篇博客。</p><span id="more"></span><hr><p>by Paneer</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/16107.html"/>
    <url>/16107.html</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
